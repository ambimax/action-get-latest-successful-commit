"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var require$$0=require("os"),fs_1=require("fs"),require$$1=require("path"),http=require("http"),https=require("https");require("net");var tls=require("tls"),events=require("events");require("assert");var util=require("util"),Stream=require("stream"),Url=require("url"),zlib=require("zlib");function _interopDefaultLegacy(e){return e&&typeof e=="object"&&"default"in e?e:{default:e}}var require$$0__default=_interopDefaultLegacy(require$$0),fs_1__default=_interopDefaultLegacy(fs_1),require$$1__default=_interopDefaultLegacy(require$$1),http__default=_interopDefaultLegacy(http),https__default=_interopDefaultLegacy(https),tls__default=_interopDefaultLegacy(tls),events__default=_interopDefaultLegacy(events),util__default=_interopDefaultLegacy(util),Stream__default=_interopDefaultLegacy(Stream),Url__default=_interopDefaultLegacy(Url),zlib__default=_interopDefaultLegacy(zlib),commonjsGlobal=typeof globalThis!="undefined"?globalThis:typeof window!="undefined"?window:typeof global!="undefined"?global:typeof self!="undefined"?self:{};function createCommonjsModule(e,t,r){return r={path:t,exports:{},require:function(s,o){return commonjsRequire(s,o==null?r.path:o)}},e(r,r.exports),r.exports}function getAugmentedNamespace(e){if(e.__esModule)return e;var t=Object.defineProperty({},"__esModule",{value:!0});return Object.keys(e).forEach(function(r){var s=Object.getOwnPropertyDescriptor(e,r);Object.defineProperty(t,r,s.get?s:{enumerable:!0,get:function(){return e[r]}})}),t}function commonjsRequire(){throw new Error("Dynamic requires are not currently supported by @rollup/plugin-commonjs")}var utils=createCommonjsModule(function(e,t){Object.defineProperty(t,"__esModule",{value:!0});function r(s){return s==null?"":typeof s=="string"||s instanceof String?s:JSON.stringify(s)}t.toCommandValue=r}),command=createCommonjsModule(function(e,t){var r=commonjsGlobal&&commonjsGlobal.__importStar||function(l){if(l&&l.__esModule)return l;var f={};if(l!=null)for(var g in l)Object.hasOwnProperty.call(l,g)&&(f[g]=l[g]);return f.default=l,f};Object.defineProperty(t,"__esModule",{value:!0});const s=r(require$$0__default.default);function o(l,f,g){const y=new a(l,f,g);process.stdout.write(y.toString()+s.EOL)}t.issueCommand=o;function i(l,f=""){o(l,{},f)}t.issue=i;const n="::";class a{constructor(l,f,g){l||(l="missing.command"),this.command=l,this.properties=f,this.message=g}toString(){let l=n+this.command;if(this.properties&&Object.keys(this.properties).length>0){l+=" ";let f=!0;for(const g in this.properties)if(this.properties.hasOwnProperty(g)){const y=this.properties[g];y&&(f?f=!1:l+=",",l+=`${g}=${d(y)}`)}}return l+=`${n}${u(this.message)}`,l}}function u(l){return utils.toCommandValue(l).replace(/%/g,"%25").replace(/\r/g,"%0D").replace(/\n/g,"%0A")}function d(l){return utils.toCommandValue(l).replace(/%/g,"%25").replace(/\r/g,"%0D").replace(/\n/g,"%0A").replace(/:/g,"%3A").replace(/,/g,"%2C")}}),fileCommand=createCommonjsModule(function(e,t){var r=commonjsGlobal&&commonjsGlobal.__importStar||function(n){if(n&&n.__esModule)return n;var a={};if(n!=null)for(var u in n)Object.hasOwnProperty.call(n,u)&&(a[u]=n[u]);return a.default=n,a};Object.defineProperty(t,"__esModule",{value:!0});const s=r(fs_1__default.default),o=r(require$$0__default.default);function i(n,a){const u=process.env[`GITHUB_${n}`];if(!u)throw new Error(`Unable to find environment variable for file command ${n}`);if(!s.existsSync(u))throw new Error(`Missing file at path: ${u}`);s.appendFileSync(u,`${utils.toCommandValue(a)}${o.EOL}`,{encoding:"utf8"})}t.issueCommand=i}),core=createCommonjsModule(function(e,t){var r=commonjsGlobal&&commonjsGlobal.__awaiter||function(h,P,O,S){function A(k){return k instanceof O?k:new O(function(U){U(k)})}return new(O||(O=Promise))(function(k,U){function j(G){try{C(S.next(G))}catch(D){U(D)}}function F(G){try{C(S.throw(G))}catch(D){U(D)}}function C(G){G.done?k(G.value):A(G.value).then(j,F)}C((S=S.apply(h,P||[])).next())})},s=commonjsGlobal&&commonjsGlobal.__importStar||function(h){if(h&&h.__esModule)return h;var P={};if(h!=null)for(var O in h)Object.hasOwnProperty.call(h,O)&&(P[O]=h[O]);return P.default=h,P};Object.defineProperty(t,"__esModule",{value:!0});const o=s(require$$0__default.default),i=s(require$$1__default.default);var n;(function(h){h[h.Success=0]="Success",h[h.Failure=1]="Failure"})(n=t.ExitCode||(t.ExitCode={}));function a(h,P){const O=utils.toCommandValue(P);process.env[h]=O;const S=process.env.GITHUB_ENV||"";if(S){const A="_GitHubActionsFileCommandDelimeter_",k=`${h}<<${A}${o.EOL}${O}${o.EOL}${A}`;fileCommand.issueCommand("ENV",k)}else command.issueCommand("set-env",{name:h},O)}t.exportVariable=a;function u(h){command.issueCommand("add-mask",{},h)}t.setSecret=u;function d(h){const P=process.env.GITHUB_PATH||"";P?fileCommand.issueCommand("PATH",h):command.issueCommand("add-path",{},h),process.env.PATH=`${h}${i.delimiter}${process.env.PATH}`}t.addPath=d;function l(h,P){const O=process.env[`INPUT_${h.replace(/ /g,"_").toUpperCase()}`]||"";if(P&&P.required&&!O)throw new Error(`Input required and not supplied: ${h}`);return O.trim()}t.getInput=l;function f(h,P){command.issueCommand("set-output",{name:h},P)}t.setOutput=f;function g(h){command.issue("echo",h?"on":"off")}t.setCommandEcho=g;function y(h){process.exitCode=n.Failure,c(h)}t.setFailed=y;function _(){return process.env.RUNNER_DEBUG==="1"}t.isDebug=_;function R(h){command.issueCommand("debug",{},h)}t.debug=R;function c(h){command.issue("error",h instanceof Error?h.toString():h)}t.error=c;function p(h){command.issue("warning",h instanceof Error?h.toString():h)}t.warning=p;function m(h){process.stdout.write(h+o.EOL)}t.info=m;function T(h){command.issue("group",h)}t.startGroup=T;function b(){command.issue("endgroup")}t.endGroup=b;function E(h,P){return r(this,void 0,void 0,function*(){T(h);let O;try{O=yield P()}finally{b()}return O})}t.group=E;function w(h,P){command.issueCommand("save-state",{name:h},P)}t.saveState=w;function v(h){return process.env[`STATE_${h}`]||""}t.getState=v}),context=createCommonjsModule(function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.Context=void 0;class r{constructor(){if(this.payload={},process.env.GITHUB_EVENT_PATH)if(fs_1__default.default.existsSync(process.env.GITHUB_EVENT_PATH))this.payload=JSON.parse(fs_1__default.default.readFileSync(process.env.GITHUB_EVENT_PATH,{encoding:"utf8"}));else{const s=process.env.GITHUB_EVENT_PATH;process.stdout.write(`GITHUB_EVENT_PATH ${s} does not exist${require$$0__default.default.EOL}`)}this.eventName=process.env.GITHUB_EVENT_NAME,this.sha=process.env.GITHUB_SHA,this.ref=process.env.GITHUB_REF,this.workflow=process.env.GITHUB_WORKFLOW,this.action=process.env.GITHUB_ACTION,this.actor=process.env.GITHUB_ACTOR,this.job=process.env.GITHUB_JOB,this.runNumber=parseInt(process.env.GITHUB_RUN_NUMBER,10),this.runId=parseInt(process.env.GITHUB_RUN_ID,10)}get issue(){const s=this.payload;return Object.assign(Object.assign({},this.repo),{number:(s.issue||s.pull_request||s).number})}get repo(){if(process.env.GITHUB_REPOSITORY){const[s,o]=process.env.GITHUB_REPOSITORY.split("/");return{owner:s,repo:o}}if(this.payload.repository)return{owner:this.payload.repository.owner.login,repo:this.payload.repository.name};throw new Error("context.repo requires a GITHUB_REPOSITORY environment variable like 'owner/repo'")}}t.Context=r}),proxy=createCommonjsModule(function(e,t){Object.defineProperty(t,"__esModule",{value:!0});function r(o){let i=o.protocol==="https:",n;if(s(o))return n;let a;return i?a=process.env.https_proxy||process.env.HTTPS_PROXY:a=process.env.http_proxy||process.env.HTTP_PROXY,a&&(n=new URL(a)),n}t.getProxyUrl=r;function s(o){if(!o.hostname)return!1;let i=process.env.no_proxy||process.env.NO_PROXY||"";if(!i)return!1;let n;o.port?n=Number(o.port):o.protocol==="http:"?n=80:o.protocol==="https:"&&(n=443);let a=[o.hostname.toUpperCase()];typeof n=="number"&&a.push(`${a[0]}:${n}`);for(let u of i.split(",").map(d=>d.trim().toUpperCase()).filter(d=>d))if(a.some(d=>d===u))return!0;return!1}t.checkBypass=s}),httpOverHttp_1=httpOverHttp,httpsOverHttp_1=httpsOverHttp,httpOverHttps_1=httpOverHttps,httpsOverHttps_1=httpsOverHttps;function httpOverHttp(e){var t=new TunnelingAgent(e);return t.request=http__default.default.request,t}function httpsOverHttp(e){var t=new TunnelingAgent(e);return t.request=http__default.default.request,t.createSocket=createSecureSocket,t.defaultPort=443,t}function httpOverHttps(e){var t=new TunnelingAgent(e);return t.request=https__default.default.request,t}function httpsOverHttps(e){var t=new TunnelingAgent(e);return t.request=https__default.default.request,t.createSocket=createSecureSocket,t.defaultPort=443,t}function TunnelingAgent(e){var t=this;t.options=e||{},t.proxyOptions=t.options.proxy||{},t.maxSockets=t.options.maxSockets||http__default.default.Agent.defaultMaxSockets,t.requests=[],t.sockets=[],t.on("free",function(s,o,i,n){for(var a=toOptions(o,i,n),u=0,d=t.requests.length;u<d;++u){var l=t.requests[u];if(l.host===a.host&&l.port===a.port){t.requests.splice(u,1),l.request.onSocket(s);return}}s.destroy(),t.removeSocket(s)})}util__default.default.inherits(TunnelingAgent,events__default.default.EventEmitter),TunnelingAgent.prototype.addRequest=function(t,r,s,o){var i=this,n=mergeOptions({request:t},i.options,toOptions(r,s,o));if(i.sockets.length>=this.maxSockets){i.requests.push(n);return}i.createSocket(n,function(a){a.on("free",u),a.on("close",d),a.on("agentRemove",d),t.onSocket(a);function u(){i.emit("free",a,n)}function d(l){i.removeSocket(a),a.removeListener("free",u),a.removeListener("close",d),a.removeListener("agentRemove",d)}})},TunnelingAgent.prototype.createSocket=function(t,r){var s=this,o={};s.sockets.push(o);var i=mergeOptions({},s.proxyOptions,{method:"CONNECT",path:t.host+":"+t.port,agent:!1,headers:{host:t.host+":"+t.port}});t.localAddress&&(i.localAddress=t.localAddress),i.proxyAuth&&(i.headers=i.headers||{},i.headers["Proxy-Authorization"]="Basic "+new Buffer(i.proxyAuth).toString("base64")),debug("making CONNECT request");var n=s.request(i);n.useChunkedEncodingByDefault=!1,n.once("response",a),n.once("upgrade",u),n.once("connect",d),n.once("error",l),n.end();function a(f){f.upgrade=!0}function u(f,g,y){process.nextTick(function(){d(f,g,y)})}function d(f,g,y){if(n.removeAllListeners(),g.removeAllListeners(),f.statusCode!==200){debug("tunneling socket could not be established, statusCode=%d",f.statusCode),g.destroy();var _=new Error("tunneling socket could not be established, statusCode="+f.statusCode);_.code="ECONNRESET",t.request.emit("error",_),s.removeSocket(o);return}if(y.length>0){debug("got illegal response body from proxy"),g.destroy();var _=new Error("got illegal response body from proxy");_.code="ECONNRESET",t.request.emit("error",_),s.removeSocket(o);return}return debug("tunneling connection has established"),s.sockets[s.sockets.indexOf(o)]=g,r(g)}function l(f){n.removeAllListeners(),debug(`tunneling socket could not be established, cause=%s
`,f.message,f.stack);var g=new Error("tunneling socket could not be established, cause="+f.message);g.code="ECONNRESET",t.request.emit("error",g),s.removeSocket(o)}},TunnelingAgent.prototype.removeSocket=function(t){var r=this.sockets.indexOf(t);if(r===-1)return;this.sockets.splice(r,1);var s=this.requests.shift();s&&this.createSocket(s,function(o){s.request.onSocket(o)})};function createSecureSocket(e,t){var r=this;TunnelingAgent.prototype.createSocket.call(r,e,function(s){var o=e.request.getHeader("host"),i=mergeOptions({},r.options,{socket:s,servername:o?o.replace(/:.*$/,""):e.host}),n=tls__default.default.connect(0,i);r.sockets[r.sockets.indexOf(s)]=n,t(n)})}function toOptions(e,t,r){return typeof e=="string"?{host:e,port:t,localAddress:r}:e}function mergeOptions(e){for(var t=1,r=arguments.length;t<r;++t){var s=arguments[t];if(typeof s=="object")for(var o=Object.keys(s),i=0,n=o.length;i<n;++i){var a=o[i];s[a]!==void 0&&(e[a]=s[a])}}return e}var debug;process.env.NODE_DEBUG&&/\btunnel\b/.test(process.env.NODE_DEBUG)?debug=function(){var e=Array.prototype.slice.call(arguments);typeof e[0]=="string"?e[0]="TUNNEL: "+e[0]:e.unshift("TUNNEL:"),console.error.apply(console,e)}:debug=function(){};var debug_1=debug,tunnel={httpOverHttp:httpOverHttp_1,httpsOverHttp:httpsOverHttp_1,httpOverHttps:httpOverHttps_1,httpsOverHttps:httpsOverHttps_1,debug:debug_1},tunnel$1=tunnel,httpClient=createCommonjsModule(function(e,t){Object.defineProperty(t,"__esModule",{value:!0});let r;var s;(function(c){c[c.OK=200]="OK",c[c.MultipleChoices=300]="MultipleChoices",c[c.MovedPermanently=301]="MovedPermanently",c[c.ResourceMoved=302]="ResourceMoved",c[c.SeeOther=303]="SeeOther",c[c.NotModified=304]="NotModified",c[c.UseProxy=305]="UseProxy",c[c.SwitchProxy=306]="SwitchProxy",c[c.TemporaryRedirect=307]="TemporaryRedirect",c[c.PermanentRedirect=308]="PermanentRedirect",c[c.BadRequest=400]="BadRequest",c[c.Unauthorized=401]="Unauthorized",c[c.PaymentRequired=402]="PaymentRequired",c[c.Forbidden=403]="Forbidden",c[c.NotFound=404]="NotFound",c[c.MethodNotAllowed=405]="MethodNotAllowed",c[c.NotAcceptable=406]="NotAcceptable",c[c.ProxyAuthenticationRequired=407]="ProxyAuthenticationRequired",c[c.RequestTimeout=408]="RequestTimeout",c[c.Conflict=409]="Conflict",c[c.Gone=410]="Gone",c[c.TooManyRequests=429]="TooManyRequests",c[c.InternalServerError=500]="InternalServerError",c[c.NotImplemented=501]="NotImplemented",c[c.BadGateway=502]="BadGateway",c[c.ServiceUnavailable=503]="ServiceUnavailable",c[c.GatewayTimeout=504]="GatewayTimeout"})(s=t.HttpCodes||(t.HttpCodes={}));var o;(function(c){c.Accept="accept",c.ContentType="content-type"})(o=t.Headers||(t.Headers={}));var i;(function(c){c.ApplicationJson="application/json"})(i=t.MediaTypes||(t.MediaTypes={}));function n(c){let p=proxy.getProxyUrl(new URL(c));return p?p.href:""}t.getProxyUrl=n;const a=[s.MovedPermanently,s.ResourceMoved,s.SeeOther,s.TemporaryRedirect,s.PermanentRedirect],u=[s.BadGateway,s.ServiceUnavailable,s.GatewayTimeout],d=["OPTIONS","GET","DELETE","HEAD"],l=10,f=5;class g extends Error{constructor(c,p){super(c);this.name="HttpClientError",this.statusCode=p,Object.setPrototypeOf(this,g.prototype)}}t.HttpClientError=g;class y{constructor(c){this.message=c}readBody(){return new Promise(async(c,p)=>{let m=Buffer.alloc(0);this.message.on("data",T=>{m=Buffer.concat([m,T])}),this.message.on("end",()=>{c(m.toString())})})}}t.HttpClientResponse=y;function _(c){let p=new URL(c);return p.protocol==="https:"}t.isHttps=_;class R{constructor(c,p,m){this._ignoreSslError=!1,this._allowRedirects=!0,this._allowRedirectDowngrade=!1,this._maxRedirects=50,this._allowRetries=!1,this._maxRetries=1,this._keepAlive=!1,this._disposed=!1,this.userAgent=c,this.handlers=p||[],this.requestOptions=m,m&&(m.ignoreSslError!=null&&(this._ignoreSslError=m.ignoreSslError),this._socketTimeout=m.socketTimeout,m.allowRedirects!=null&&(this._allowRedirects=m.allowRedirects),m.allowRedirectDowngrade!=null&&(this._allowRedirectDowngrade=m.allowRedirectDowngrade),m.maxRedirects!=null&&(this._maxRedirects=Math.max(m.maxRedirects,0)),m.keepAlive!=null&&(this._keepAlive=m.keepAlive),m.allowRetries!=null&&(this._allowRetries=m.allowRetries),m.maxRetries!=null&&(this._maxRetries=m.maxRetries))}options(c,p){return this.request("OPTIONS",c,null,p||{})}get(c,p){return this.request("GET",c,null,p||{})}del(c,p){return this.request("DELETE",c,null,p||{})}post(c,p,m){return this.request("POST",c,p,m||{})}patch(c,p,m){return this.request("PATCH",c,p,m||{})}put(c,p,m){return this.request("PUT",c,p,m||{})}head(c,p){return this.request("HEAD",c,null,p||{})}sendStream(c,p,m,T){return this.request(c,p,m,T)}async getJson(c,p={}){p[o.Accept]=this._getExistingOrDefaultHeader(p,o.Accept,i.ApplicationJson);let m=await this.get(c,p);return this._processResponse(m,this.requestOptions)}async postJson(c,p,m={}){let T=JSON.stringify(p,null,2);m[o.Accept]=this._getExistingOrDefaultHeader(m,o.Accept,i.ApplicationJson),m[o.ContentType]=this._getExistingOrDefaultHeader(m,o.ContentType,i.ApplicationJson);let b=await this.post(c,T,m);return this._processResponse(b,this.requestOptions)}async putJson(c,p,m={}){let T=JSON.stringify(p,null,2);m[o.Accept]=this._getExistingOrDefaultHeader(m,o.Accept,i.ApplicationJson),m[o.ContentType]=this._getExistingOrDefaultHeader(m,o.ContentType,i.ApplicationJson);let b=await this.put(c,T,m);return this._processResponse(b,this.requestOptions)}async patchJson(c,p,m={}){let T=JSON.stringify(p,null,2);m[o.Accept]=this._getExistingOrDefaultHeader(m,o.Accept,i.ApplicationJson),m[o.ContentType]=this._getExistingOrDefaultHeader(m,o.ContentType,i.ApplicationJson);let b=await this.patch(c,T,m);return this._processResponse(b,this.requestOptions)}async request(c,p,m,T){if(this._disposed)throw new Error("Client has already been disposed.");let b=new URL(p),E=this._prepareRequest(c,b,T),w=this._allowRetries&&d.indexOf(c)!=-1?this._maxRetries+1:1,v=0,h;for(;v<w;){if(h=await this.requestRaw(E,m),h&&h.message&&h.message.statusCode===s.Unauthorized){let O;for(let S=0;S<this.handlers.length;S++)if(this.handlers[S].canHandleAuthentication(h)){O=this.handlers[S];break}return O?O.handleAuthentication(this,E,m):h}let P=this._maxRedirects;for(;a.indexOf(h.message.statusCode)!=-1&&this._allowRedirects&&P>0;){const O=h.message.headers.location;if(!O)break;let S=new URL(O);if(b.protocol=="https:"&&b.protocol!=S.protocol&&!this._allowRedirectDowngrade)throw new Error("Redirect from HTTPS to HTTP protocol. This downgrade is not allowed for security reasons. If you want to allow this behavior, set the allowRedirectDowngrade option to true.");if(await h.readBody(),S.hostname!==b.hostname)for(let A in T)A.toLowerCase()==="authorization"&&delete T[A];E=this._prepareRequest(c,S,T),h=await this.requestRaw(E,m),P--}if(u.indexOf(h.message.statusCode)==-1)return h;v+=1,v<w&&(await h.readBody(),await this._performExponentialBackoff(v))}return h}dispose(){this._agent&&this._agent.destroy(),this._disposed=!0}requestRaw(c,p){return new Promise((m,T)=>{let b=function(E,w){E&&T(E),m(w)};this.requestRawWithCallback(c,p,b)})}requestRawWithCallback(c,p,m){let T;typeof p=="string"&&(c.options.headers["Content-Length"]=Buffer.byteLength(p,"utf8"));let b=!1,E=(v,h)=>{b||(b=!0,m(v,h))},w=c.httpModule.request(c.options,v=>{let h=new y(v);E(null,h)});w.on("socket",v=>{T=v}),w.setTimeout(this._socketTimeout||3*6e4,()=>{T&&T.end(),E(new Error("Request timeout: "+c.options.path),null)}),w.on("error",function(v){E(v,null)}),p&&typeof p=="string"&&w.write(p,"utf8"),p&&typeof p!="string"?(p.on("close",function(){w.end()}),p.pipe(w)):w.end()}getAgent(c){let p=new URL(c);return this._getAgent(p)}_prepareRequest(c,p,m){const T={};T.parsedUrl=p;const b=T.parsedUrl.protocol==="https:";T.httpModule=b?https__default.default:http__default.default;const E=b?443:80;return T.options={},T.options.host=T.parsedUrl.hostname,T.options.port=T.parsedUrl.port?parseInt(T.parsedUrl.port):E,T.options.path=(T.parsedUrl.pathname||"")+(T.parsedUrl.search||""),T.options.method=c,T.options.headers=this._mergeHeaders(m),this.userAgent!=null&&(T.options.headers["user-agent"]=this.userAgent),T.options.agent=this._getAgent(T.parsedUrl),this.handlers&&this.handlers.forEach(w=>{w.prepareRequest(T.options)}),T}_mergeHeaders(c){const p=m=>Object.keys(m).reduce((T,b)=>(T[b.toLowerCase()]=m[b],T),{});return this.requestOptions&&this.requestOptions.headers?Object.assign({},p(this.requestOptions.headers),p(c)):p(c||{})}_getExistingOrDefaultHeader(c,p,m){const T=E=>Object.keys(E).reduce((w,v)=>(w[v.toLowerCase()]=E[v],w),{});let b;return this.requestOptions&&this.requestOptions.headers&&(b=T(this.requestOptions.headers)[p]),c[p]||b||m}_getAgent(c){let p,m=proxy.getProxyUrl(c),T=m&&m.hostname;if(this._keepAlive&&T&&(p=this._proxyAgent),this._keepAlive&&!T&&(p=this._agent),p)return p;const b=c.protocol==="https:";let E=100;if(this.requestOptions&&(E=this.requestOptions.maxSockets||http__default.default.globalAgent.maxSockets),T){r||(r=tunnel$1);const w={maxSockets:E,keepAlive:this._keepAlive,proxy:{proxyAuth:`${m.username}:${m.password}`,host:m.hostname,port:m.port}};let v;const h=m.protocol==="https:";b?v=h?r.httpsOverHttps:r.httpsOverHttp:v=h?r.httpOverHttps:r.httpOverHttp,p=v(w),this._proxyAgent=p}if(this._keepAlive&&!p){const w={keepAlive:this._keepAlive,maxSockets:E};p=b?new https__default.default.Agent(w):new http__default.default.Agent(w),this._agent=p}return p||(p=b?https__default.default.globalAgent:http__default.default.globalAgent),b&&this._ignoreSslError&&(p.options=Object.assign(p.options||{},{rejectUnauthorized:!1})),p}_performExponentialBackoff(c){c=Math.min(l,c);const p=f*Math.pow(2,c);return new Promise(m=>setTimeout(()=>m(),p))}static dateTimeDeserializer(c,p){if(typeof p=="string"){let m=new Date(p);if(!isNaN(m.valueOf()))return m}return p}async _processResponse(c,p){return new Promise(async(m,T)=>{const b=c.message.statusCode,E={statusCode:b,result:null,headers:{}};b==s.NotFound&&m(E);let w,v;try{v=await c.readBody(),v&&v.length>0&&(p&&p.deserializeDates?w=JSON.parse(v,R.dateTimeDeserializer):w=JSON.parse(v),E.result=w),E.headers=c.message.headers}catch(h){}if(b>299){let h;w&&w.message?h=w.message:v&&v.length>0?h=v:h="Failed request: ("+b+")";let P=new g(h,b);P.result=E.result,T(P)}else m(E)})}}t.HttpClient=R}),utils$1=createCommonjsModule(function(e,t){var r=commonjsGlobal&&commonjsGlobal.__createBinding||(Object.create?function(d,l,f,g){g===void 0&&(g=f),Object.defineProperty(d,g,{enumerable:!0,get:function(){return l[f]}})}:function(d,l,f,g){g===void 0&&(g=f),d[g]=l[f]}),s=commonjsGlobal&&commonjsGlobal.__setModuleDefault||(Object.create?function(d,l){Object.defineProperty(d,"default",{enumerable:!0,value:l})}:function(d,l){d.default=l}),o=commonjsGlobal&&commonjsGlobal.__importStar||function(d){if(d&&d.__esModule)return d;var l={};if(d!=null)for(var f in d)Object.hasOwnProperty.call(d,f)&&r(l,d,f);return s(l,d),l};Object.defineProperty(t,"__esModule",{value:!0}),t.getApiBaseUrl=t.getProxyAgent=t.getAuthString=void 0;const i=o(httpClient);function n(d,l){if(!d&&!l.auth)throw new Error("Parameter token or opts.auth is required");if(d&&l.auth)throw new Error("Parameters token and opts.auth may not both be specified");return typeof l.auth=="string"?l.auth:`token ${d}`}t.getAuthString=n;function a(d){const l=new i.HttpClient;return l.getAgent(d)}t.getProxyAgent=a;function u(){return process.env.GITHUB_API_URL||"https://api.github.com"}t.getApiBaseUrl=u});function getUserAgent(){return typeof navigator=="object"&&"userAgent"in navigator?navigator.userAgent:typeof process=="object"&&"version"in process?`Node.js/${process.version.substr(1)} (${process.platform}; ${process.arch})`:"<environment undetectable>"}var register_1=register;function register(e,t,r,s){if(typeof r!="function")throw new Error("method for before hook must be a function");return s||(s={}),Array.isArray(t)?t.reverse().reduce(function(o,i){return register.bind(null,e,i,o,s)},r)():Promise.resolve().then(function(){return e.registry[t]?e.registry[t].reduce(function(o,i){return i.hook.bind(null,o,s)},r)():r(s)})}var add=addHook;function addHook(e,t,r,s){var o=s;e.registry[r]||(e.registry[r]=[]),t==="before"&&(s=function(i,n){return Promise.resolve().then(o.bind(null,n)).then(i.bind(null,n))}),t==="after"&&(s=function(i,n){var a;return Promise.resolve().then(i.bind(null,n)).then(function(u){return a=u,o(a,n)}).then(function(){return a})}),t==="error"&&(s=function(i,n){return Promise.resolve().then(i.bind(null,n)).catch(function(a){return o(a,n)})}),e.registry[r].push({hook:s,orig:o})}var remove=removeHook;function removeHook(e,t,r){if(!e.registry[t])return;var s=e.registry[t].map(function(o){return o.orig}).indexOf(r);if(s===-1)return;e.registry[t].splice(s,1)}var bind=Function.bind,bindable=bind.bind(bind);function bindApi(e,t,r){var s=bindable(remove,null).apply(null,r?[t,r]:[t]);e.api={remove:s},e.remove=s,["before","error","after","wrap"].forEach(function(o){var i=r?[t,o,r]:[t,o];e[o]=e.api[o]=bindable(add,null).apply(null,i)})}function HookSingular(){var e="h",t={registry:{}},r=register_1.bind(null,t,e);return bindApi(r,t,e),r}function HookCollection(){var e={registry:{}},t=register_1.bind(null,e);return bindApi(t,e),t}var collectionHookDeprecationMessageDisplayed=!1;function Hook(){return collectionHookDeprecationMessageDisplayed||(console.warn('[before-after-hook]: "Hook()" repurposing warning, use "Hook.Collection()". Read more: https://git.io/upgrade-before-after-hook-to-1.4'),collectionHookDeprecationMessageDisplayed=!0),HookCollection()}Hook.Singular=HookSingular.bind(),Hook.Collection=HookCollection.bind();var beforeAfterHook=Hook,Hook_1=Hook,Singular=Hook.Singular,Collection=Hook.Collection;beforeAfterHook.Hook=Hook_1,beforeAfterHook.Singular=Singular,beforeAfterHook.Collection=Collection;/*!
 * is-plain-object <https://github.com/jonschlinkert/is-plain-object>
 *
 * Copyright (c) 2014-2017, Jon Schlinkert.
 * Released under the MIT License.
 */function isObject(e){return Object.prototype.toString.call(e)==="[object Object]"}function isPlainObject(e){var t,r;return isObject(e)===!1?!1:(t=e.constructor,t===void 0?!0:(r=t.prototype,isObject(r)===!1?!1:!(r.hasOwnProperty("isPrototypeOf")===!1)))}function lowercaseKeys(e){return e?Object.keys(e).reduce((t,r)=>(t[r.toLowerCase()]=e[r],t),{}):{}}function mergeDeep(e,t){const r=Object.assign({},e);return Object.keys(t).forEach(s=>{isPlainObject(t[s])?s in e?r[s]=mergeDeep(e[s],t[s]):Object.assign(r,{[s]:t[s]}):Object.assign(r,{[s]:t[s]})}),r}function removeUndefinedProperties(e){for(const t in e)e[t]===void 0&&delete e[t];return e}function merge(e,t,r){if(typeof t=="string"){let[o,i]=t.split(" ");r=Object.assign(i?{method:o,url:i}:{url:o},r)}else r=Object.assign({},t);r.headers=lowercaseKeys(r.headers),removeUndefinedProperties(r),removeUndefinedProperties(r.headers);const s=mergeDeep(e||{},r);return e&&e.mediaType.previews.length&&(s.mediaType.previews=e.mediaType.previews.filter(o=>!s.mediaType.previews.includes(o)).concat(s.mediaType.previews)),s.mediaType.previews=s.mediaType.previews.map(o=>o.replace(/-preview/,"")),s}function addQueryParameters(e,t){const r=/\?/.test(e)?"&":"?",s=Object.keys(t);return s.length===0?e:e+r+s.map(o=>o==="q"?"q="+t.q.split("+").map(encodeURIComponent).join("+"):`${o}=${encodeURIComponent(t[o])}`).join("&")}const urlVariableRegex=/\{[^}]+\}/g;function removeNonChars(e){return e.replace(/^\W+|\W+$/g,"").split(/,/)}function extractUrlVariableNames(e){const t=e.match(urlVariableRegex);return t?t.map(removeNonChars).reduce((r,s)=>r.concat(s),[]):[]}function omit(e,t){return Object.keys(e).filter(r=>!t.includes(r)).reduce((r,s)=>(r[s]=e[s],r),{})}function encodeReserved(e){return e.split(/(%[0-9A-Fa-f]{2})/g).map(function(t){return/%[0-9A-Fa-f]/.test(t)||(t=encodeURI(t).replace(/%5B/g,"[").replace(/%5D/g,"]")),t}).join("")}function encodeUnreserved(e){return encodeURIComponent(e).replace(/[!'()*]/g,function(t){return"%"+t.charCodeAt(0).toString(16).toUpperCase()})}function encodeValue(e,t,r){return t=e==="+"||e==="#"?encodeReserved(t):encodeUnreserved(t),r?encodeUnreserved(r)+"="+t:t}function isDefined(e){return e!=null}function isKeyOperator(e){return e===";"||e==="&"||e==="?"}function getValues(e,t,r,s){var o=e[r],i=[];if(isDefined(o)&&o!=="")if(typeof o=="string"||typeof o=="number"||typeof o=="boolean")o=o.toString(),s&&s!=="*"&&(o=o.substring(0,parseInt(s,10))),i.push(encodeValue(t,o,isKeyOperator(t)?r:""));else if(s==="*")Array.isArray(o)?o.filter(isDefined).forEach(function(n){i.push(encodeValue(t,n,isKeyOperator(t)?r:""))}):Object.keys(o).forEach(function(n){isDefined(o[n])&&i.push(encodeValue(t,o[n],n))});else{const n=[];Array.isArray(o)?o.filter(isDefined).forEach(function(a){n.push(encodeValue(t,a))}):Object.keys(o).forEach(function(a){isDefined(o[a])&&(n.push(encodeUnreserved(a)),n.push(encodeValue(t,o[a].toString())))}),isKeyOperator(t)?i.push(encodeUnreserved(r)+"="+n.join(",")):n.length!==0&&i.push(n.join(","))}else t===";"?isDefined(o)&&i.push(encodeUnreserved(r)):o===""&&(t==="&"||t==="?")?i.push(encodeUnreserved(r)+"="):o===""&&i.push("");return i}function parseUrl(e){return{expand:expand.bind(null,e)}}function expand(e,t){var r=["+","#",".","/",";","?","&"];return e.replace(/\{([^\{\}]+)\}|([^\{\}]+)/g,function(s,o,i){if(o){let a="";const u=[];if(r.indexOf(o.charAt(0))!==-1&&(a=o.charAt(0),o=o.substr(1)),o.split(/,/g).forEach(function(d){var l=/([^:\*]*)(?::(\d+)|(\*))?/.exec(d);u.push(getValues(t,a,l[1],l[2]||l[3]))}),a&&a!=="+"){var n=",";return a==="?"?n="&":a!=="#"&&(n=a),(u.length!==0?a:"")+u.join(n)}else return u.join(",")}else return encodeReserved(i)})}function parse(e){let t=e.method.toUpperCase(),r=(e.url||"/").replace(/:([a-z]\w+)/g,"{$1}"),s=Object.assign({},e.headers),o,i=omit(e,["method","baseUrl","url","headers","request","mediaType"]);const n=extractUrlVariableNames(r);r=parseUrl(r).expand(i),/^http/.test(r)||(r=e.baseUrl+r);const a=Object.keys(e).filter(l=>n.includes(l)).concat("baseUrl"),u=omit(i,a),d=/application\/octet-stream/i.test(s.accept);if(!d&&(e.mediaType.format&&(s.accept=s.accept.split(/,/).map(l=>l.replace(/application\/vnd(\.\w+)(\.v3)?(\.\w+)?(\+json)?$/,`application/vnd$1$2.${e.mediaType.format}`)).join(",")),e.mediaType.previews.length)){const l=s.accept.match(/[\w-]+(?=-preview)/g)||[];s.accept=l.concat(e.mediaType.previews).map(f=>{const g=e.mediaType.format?`.${e.mediaType.format}`:"+json";return`application/vnd.github.${f}-preview${g}`}).join(",")}return["GET","HEAD"].includes(t)?r=addQueryParameters(r,u):"data"in u?o=u.data:Object.keys(u).length?o=u:s["content-length"]=0,!s["content-type"]&&typeof o!="undefined"&&(s["content-type"]="application/json; charset=utf-8"),["PATCH","PUT"].includes(t)&&typeof o=="undefined"&&(o=""),Object.assign({method:t,url:r,headers:s},typeof o!="undefined"?{body:o}:null,e.request?{request:e.request}:null)}function endpointWithDefaults(e,t,r){return parse(merge(e,t,r))}function withDefaults(e,t){const r=merge(e,t),s=endpointWithDefaults.bind(null,r);return Object.assign(s,{DEFAULTS:r,defaults:withDefaults.bind(null,r),merge:merge.bind(null,r),parse})}const VERSION="6.0.8",userAgent=`octokit-endpoint.js/${VERSION} ${getUserAgent()}`,DEFAULTS={method:"GET",baseUrl:"https://api.github.com",headers:{accept:"application/vnd.github.v3+json","user-agent":userAgent},mediaType:{format:"",previews:[]}},endpoint=withDefaults(null,DEFAULTS),Readable=Stream__default.default.Readable,BUFFER=Symbol("buffer"),TYPE=Symbol("type");class Blob{constructor(){this[TYPE]="";const e=arguments[0],t=arguments[1],r=[];let s=0;if(e){const i=e,n=Number(i.length);for(let a=0;a<n;a++){const u=i[a];let d;u instanceof Buffer?d=u:ArrayBuffer.isView(u)?d=Buffer.from(u.buffer,u.byteOffset,u.byteLength):u instanceof ArrayBuffer?d=Buffer.from(u):u instanceof Blob?d=u[BUFFER]:d=Buffer.from(typeof u=="string"?u:String(u)),s+=d.length,r.push(d)}}this[BUFFER]=Buffer.concat(r);let o=t&&t.type!==void 0&&String(t.type).toLowerCase();o&&!/[^\u0020-\u007E]/.test(o)&&(this[TYPE]=o)}get size(){return this[BUFFER].length}get type(){return this[TYPE]}text(){return Promise.resolve(this[BUFFER].toString())}arrayBuffer(){const e=this[BUFFER],t=e.buffer.slice(e.byteOffset,e.byteOffset+e.byteLength);return Promise.resolve(t)}stream(){const e=new Readable;return e._read=function(){},e.push(this[BUFFER]),e.push(null),e}toString(){return"[object Blob]"}slice(){const e=this.size,t=arguments[0],r=arguments[1];let s,o;t===void 0?s=0:t<0?s=Math.max(e+t,0):s=Math.min(t,e),r===void 0?o=e:r<0?o=Math.max(e+r,0):o=Math.min(r,e);const i=Math.max(o-s,0),n=this[BUFFER],a=n.slice(s,s+i),u=new Blob([],{type:arguments[2]});return u[BUFFER]=a,u}}Object.defineProperties(Blob.prototype,{size:{enumerable:!0},type:{enumerable:!0},slice:{enumerable:!0}}),Object.defineProperty(Blob.prototype,Symbol.toStringTag,{value:"Blob",writable:!1,enumerable:!1,configurable:!0});function FetchError(e,t,r){Error.call(this,e),this.message=e,this.type=t,r&&(this.code=this.errno=r.code),Error.captureStackTrace(this,this.constructor)}FetchError.prototype=Object.create(Error.prototype),FetchError.prototype.constructor=FetchError,FetchError.prototype.name="FetchError";let convert;try{convert=require("encoding").convert}catch(e){}const INTERNALS=Symbol("Body internals"),PassThrough=Stream__default.default.PassThrough;function Body(e){var t=this,r=arguments.length>1&&arguments[1]!==void 0?arguments[1]:{},s=r.size;let o=s===void 0?0:s;var i=r.timeout;let n=i===void 0?0:i;e==null?e=null:isURLSearchParams(e)?e=Buffer.from(e.toString()):isBlob(e)||(Buffer.isBuffer(e)||(Object.prototype.toString.call(e)==="[object ArrayBuffer]"?e=Buffer.from(e):ArrayBuffer.isView(e)?e=Buffer.from(e.buffer,e.byteOffset,e.byteLength):e instanceof Stream__default.default||(e=Buffer.from(String(e))))),this[INTERNALS]={body:e,disturbed:!1,error:null},this.size=o,this.timeout=n,e instanceof Stream__default.default&&e.on("error",function(a){const u=a.name==="AbortError"?a:new FetchError(`Invalid response body while trying to fetch ${t.url}: ${a.message}`,"system",a);t[INTERNALS].error=u})}Body.prototype={get body(){return this[INTERNALS].body},get bodyUsed(){return this[INTERNALS].disturbed},arrayBuffer(){return consumeBody.call(this).then(function(e){return e.buffer.slice(e.byteOffset,e.byteOffset+e.byteLength)})},blob(){let e=this.headers&&this.headers.get("content-type")||"";return consumeBody.call(this).then(function(t){return Object.assign(new Blob([],{type:e.toLowerCase()}),{[BUFFER]:t})})},json(){var e=this;return consumeBody.call(this).then(function(t){try{return JSON.parse(t.toString())}catch(r){return Body.Promise.reject(new FetchError(`invalid json response body at ${e.url} reason: ${r.message}`,"invalid-json"))}})},text(){return consumeBody.call(this).then(function(e){return e.toString()})},buffer(){return consumeBody.call(this)},textConverted(){var e=this;return consumeBody.call(this).then(function(t){return convertBody(t,e.headers)})}},Object.defineProperties(Body.prototype,{body:{enumerable:!0},bodyUsed:{enumerable:!0},arrayBuffer:{enumerable:!0},blob:{enumerable:!0},json:{enumerable:!0},text:{enumerable:!0}}),Body.mixIn=function(e){for(const t of Object.getOwnPropertyNames(Body.prototype))if(!(t in e)){const r=Object.getOwnPropertyDescriptor(Body.prototype,t);Object.defineProperty(e,t,r)}};function consumeBody(){var e=this;if(this[INTERNALS].disturbed)return Body.Promise.reject(new TypeError(`body used already for: ${this.url}`));if(this[INTERNALS].disturbed=!0,this[INTERNALS].error)return Body.Promise.reject(this[INTERNALS].error);let t=this.body;if(t===null)return Body.Promise.resolve(Buffer.alloc(0));if(isBlob(t)&&(t=t.stream()),Buffer.isBuffer(t))return Body.Promise.resolve(t);if(!(t instanceof Stream__default.default))return Body.Promise.resolve(Buffer.alloc(0));let r=[],s=0,o=!1;return new Body.Promise(function(i,n){let a;e.timeout&&(a=setTimeout(function(){o=!0,n(new FetchError(`Response timeout while trying to fetch ${e.url} (over ${e.timeout}ms)`,"body-timeout"))},e.timeout)),t.on("error",function(u){u.name==="AbortError"?(o=!0,n(u)):n(new FetchError(`Invalid response body while trying to fetch ${e.url}: ${u.message}`,"system",u))}),t.on("data",function(u){if(o||u===null)return;if(e.size&&s+u.length>e.size){o=!0,n(new FetchError(`content size at ${e.url} over limit: ${e.size}`,"max-size"));return}s+=u.length,r.push(u)}),t.on("end",function(){if(o)return;clearTimeout(a);try{i(Buffer.concat(r,s))}catch(u){n(new FetchError(`Could not create Buffer from response body for ${e.url}: ${u.message}`,"system",u))}})})}function convertBody(e,t){if(typeof convert!="function")throw new Error("The package `encoding` must be installed to use the textConverted() function");const r=t.get("content-type");let s="utf-8",o,i;return r&&(o=/charset=([^;]*)/i.exec(r)),i=e.slice(0,1024).toString(),!o&&i&&(o=/<meta.+?charset=(['"])(.+?)\1/i.exec(i)),!o&&i&&(o=/<meta[\s]+?http-equiv=(['"])content-type\1[\s]+?content=(['"])(.+?)\2/i.exec(i),o||(o=/<meta[\s]+?content=(['"])(.+?)\1[\s]+?http-equiv=(['"])content-type\3/i.exec(i),o&&o.pop()),o&&(o=/charset=(.*)/i.exec(o.pop()))),!o&&i&&(o=/<\?xml.+?encoding=(['"])(.+?)\1/i.exec(i)),o&&(s=o.pop(),(s==="gb2312"||s==="gbk")&&(s="gb18030")),convert(e,"UTF-8",s).toString()}function isURLSearchParams(e){return typeof e!="object"||typeof e.append!="function"||typeof e.delete!="function"||typeof e.get!="function"||typeof e.getAll!="function"||typeof e.has!="function"||typeof e.set!="function"?!1:e.constructor.name==="URLSearchParams"||Object.prototype.toString.call(e)==="[object URLSearchParams]"||typeof e.sort=="function"}function isBlob(e){return typeof e=="object"&&typeof e.arrayBuffer=="function"&&typeof e.type=="string"&&typeof e.stream=="function"&&typeof e.constructor=="function"&&typeof e.constructor.name=="string"&&/^(Blob|File)$/.test(e.constructor.name)&&/^(Blob|File)$/.test(e[Symbol.toStringTag])}function clone(e){let t,r,s=e.body;if(e.bodyUsed)throw new Error("cannot clone body after it is used");return s instanceof Stream__default.default&&typeof s.getBoundary!="function"&&(t=new PassThrough,r=new PassThrough,s.pipe(t),s.pipe(r),e[INTERNALS].body=t,s=r),s}function extractContentType(e){return e===null?null:typeof e=="string"?"text/plain;charset=UTF-8":isURLSearchParams(e)?"application/x-www-form-urlencoded;charset=UTF-8":isBlob(e)?e.type||null:Buffer.isBuffer(e)||(Object.prototype.toString.call(e)==="[object ArrayBuffer]"||ArrayBuffer.isView(e))?null:typeof e.getBoundary=="function"?`multipart/form-data;boundary=${e.getBoundary()}`:e instanceof Stream__default.default?null:"text/plain;charset=UTF-8"}function getTotalBytes(e){const t=e.body;return t===null?0:isBlob(t)?t.size:Buffer.isBuffer(t)?t.length:t&&typeof t.getLengthSync=="function"&&(t._lengthRetrievers&&t._lengthRetrievers.length==0||t.hasKnownLength&&t.hasKnownLength())?t.getLengthSync():null}function writeToStream(e,t){const r=t.body;r===null?e.end():isBlob(r)?r.stream().pipe(e):Buffer.isBuffer(r)?(e.write(r),e.end()):r.pipe(e)}Body.Promise=global.Promise;const invalidTokenRegex=/[^\^_`a-zA-Z\-0-9!#$%&'*+.|~]/,invalidHeaderCharRegex=/[^\t\x20-\x7e\x80-\xff]/;function validateName(e){if(e=`${e}`,invalidTokenRegex.test(e)||e==="")throw new TypeError(`${e} is not a legal HTTP header name`)}function validateValue(e){if(e=`${e}`,invalidHeaderCharRegex.test(e))throw new TypeError(`${e} is not a legal HTTP header value`)}function find(e,t){t=t.toLowerCase();for(const r in e)if(r.toLowerCase()===t)return r;return}const MAP=Symbol("map");class Headers{constructor(){let e=arguments.length>0&&arguments[0]!==void 0?arguments[0]:void 0;if(this[MAP]=Object.create(null),e instanceof Headers){const t=e.raw(),r=Object.keys(t);for(const s of r)for(const o of t[s])this.append(s,o);return}if(!(e==null))if(typeof e=="object"){const t=e[Symbol.iterator];if(t!=null){if(typeof t!="function")throw new TypeError("Header pairs must be iterable");const r=[];for(const s of e){if(typeof s!="object"||typeof s[Symbol.iterator]!="function")throw new TypeError("Each header pair must be iterable");r.push(Array.from(s))}for(const s of r){if(s.length!==2)throw new TypeError("Each header pair must be a name/value tuple");this.append(s[0],s[1])}}else for(const r of Object.keys(e)){const s=e[r];this.append(r,s)}}else throw new TypeError("Provided initializer must be an object")}get(e){e=`${e}`,validateName(e);const t=find(this[MAP],e);return t===void 0?null:this[MAP][t].join(", ")}forEach(e){let t=arguments.length>1&&arguments[1]!==void 0?arguments[1]:void 0,r=getHeaders(this),s=0;for(;s<r.length;){var o=r[s];const i=o[0],n=o[1];e.call(t,n,i,this),r=getHeaders(this),s++}}set(e,t){e=`${e}`,t=`${t}`,validateName(e),validateValue(t);const r=find(this[MAP],e);this[MAP][r!==void 0?r:e]=[t]}append(e,t){e=`${e}`,t=`${t}`,validateName(e),validateValue(t);const r=find(this[MAP],e);r!==void 0?this[MAP][r].push(t):this[MAP][e]=[t]}has(e){return e=`${e}`,validateName(e),find(this[MAP],e)!==void 0}delete(e){e=`${e}`,validateName(e);const t=find(this[MAP],e);t!==void 0&&delete this[MAP][t]}raw(){return this[MAP]}keys(){return createHeadersIterator(this,"key")}values(){return createHeadersIterator(this,"value")}[Symbol.iterator](){return createHeadersIterator(this,"key+value")}}Headers.prototype.entries=Headers.prototype[Symbol.iterator],Object.defineProperty(Headers.prototype,Symbol.toStringTag,{value:"Headers",writable:!1,enumerable:!1,configurable:!0}),Object.defineProperties(Headers.prototype,{get:{enumerable:!0},forEach:{enumerable:!0},set:{enumerable:!0},append:{enumerable:!0},has:{enumerable:!0},delete:{enumerable:!0},keys:{enumerable:!0},values:{enumerable:!0},entries:{enumerable:!0}});function getHeaders(e){let t=arguments.length>1&&arguments[1]!==void 0?arguments[1]:"key+value";const r=Object.keys(e[MAP]).sort();return r.map(t==="key"?function(s){return s.toLowerCase()}:t==="value"?function(s){return e[MAP][s].join(", ")}:function(s){return[s.toLowerCase(),e[MAP][s].join(", ")]})}const INTERNAL=Symbol("internal");function createHeadersIterator(e,t){const r=Object.create(HeadersIteratorPrototype);return r[INTERNAL]={target:e,kind:t,index:0},r}const HeadersIteratorPrototype=Object.setPrototypeOf({next(){if(!this||Object.getPrototypeOf(this)!==HeadersIteratorPrototype)throw new TypeError("Value of `this` is not a HeadersIterator");var e=this[INTERNAL];const t=e.target,r=e.kind,s=e.index,o=getHeaders(t,r),i=o.length;return s>=i?{value:void 0,done:!0}:(this[INTERNAL].index=s+1,{value:o[s],done:!1})}},Object.getPrototypeOf(Object.getPrototypeOf([][Symbol.iterator]())));Object.defineProperty(HeadersIteratorPrototype,Symbol.toStringTag,{value:"HeadersIterator",writable:!1,enumerable:!1,configurable:!0});function exportNodeCompatibleHeaders(e){const t=Object.assign({__proto__:null},e[MAP]),r=find(e[MAP],"Host");return r!==void 0&&(t[r]=t[r][0]),t}function createHeadersLenient(e){const t=new Headers;for(const r of Object.keys(e)){if(invalidTokenRegex.test(r))continue;if(Array.isArray(e[r]))for(const s of e[r]){if(invalidHeaderCharRegex.test(s))continue;t[MAP][r]===void 0?t[MAP][r]=[s]:t[MAP][r].push(s)}else invalidHeaderCharRegex.test(e[r])||(t[MAP][r]=[e[r]])}return t}const INTERNALS$1=Symbol("Response internals"),STATUS_CODES=http__default.default.STATUS_CODES;class Response{constructor(){let e=arguments.length>0&&arguments[0]!==void 0?arguments[0]:null,t=arguments.length>1&&arguments[1]!==void 0?arguments[1]:{};Body.call(this,e,t);const r=t.status||200,s=new Headers(t.headers);if(e!=null&&!s.has("Content-Type")){const o=extractContentType(e);o&&s.append("Content-Type",o)}this[INTERNALS$1]={url:t.url,status:r,statusText:t.statusText||STATUS_CODES[r],headers:s,counter:t.counter}}get url(){return this[INTERNALS$1].url||""}get status(){return this[INTERNALS$1].status}get ok(){return this[INTERNALS$1].status>=200&&this[INTERNALS$1].status<300}get redirected(){return this[INTERNALS$1].counter>0}get statusText(){return this[INTERNALS$1].statusText}get headers(){return this[INTERNALS$1].headers}clone(){return new Response(clone(this),{url:this.url,status:this.status,statusText:this.statusText,headers:this.headers,ok:this.ok,redirected:this.redirected})}}Body.mixIn(Response.prototype),Object.defineProperties(Response.prototype,{url:{enumerable:!0},status:{enumerable:!0},ok:{enumerable:!0},redirected:{enumerable:!0},statusText:{enumerable:!0},headers:{enumerable:!0},clone:{enumerable:!0}}),Object.defineProperty(Response.prototype,Symbol.toStringTag,{value:"Response",writable:!1,enumerable:!1,configurable:!0});const INTERNALS$2=Symbol("Request internals"),parse_url=Url__default.default.parse,format_url=Url__default.default.format,streamDestructionSupported="destroy"in Stream__default.default.Readable.prototype;function isRequest(e){return typeof e=="object"&&typeof e[INTERNALS$2]=="object"}function isAbortSignal(e){const t=e&&typeof e=="object"&&Object.getPrototypeOf(e);return!!(t&&t.constructor.name==="AbortSignal")}class Request{constructor(e){let t=arguments.length>1&&arguments[1]!==void 0?arguments[1]:{},r;isRequest(e)?r=parse_url(e.url):(e&&e.href?r=parse_url(e.href):r=parse_url(`${e}`),e={});let s=t.method||e.method||"GET";if(s=s.toUpperCase(),(t.body!=null||isRequest(e)&&e.body!==null)&&(s==="GET"||s==="HEAD"))throw new TypeError("Request with GET/HEAD method cannot have body");let o=t.body!=null?t.body:isRequest(e)&&e.body!==null?clone(e):null;Body.call(this,o,{timeout:t.timeout||e.timeout||0,size:t.size||e.size||0});const i=new Headers(t.headers||e.headers||{});if(o!=null&&!i.has("Content-Type")){const a=extractContentType(o);a&&i.append("Content-Type",a)}let n=isRequest(e)?e.signal:null;if("signal"in t&&(n=t.signal),n!=null&&!isAbortSignal(n))throw new TypeError("Expected signal to be an instanceof AbortSignal");this[INTERNALS$2]={method:s,redirect:t.redirect||e.redirect||"follow",headers:i,parsedURL:r,signal:n},this.follow=t.follow!==void 0?t.follow:e.follow!==void 0?e.follow:20,this.compress=t.compress!==void 0?t.compress:e.compress!==void 0?e.compress:!0,this.counter=t.counter||e.counter||0,this.agent=t.agent||e.agent}get method(){return this[INTERNALS$2].method}get url(){return format_url(this[INTERNALS$2].parsedURL)}get headers(){return this[INTERNALS$2].headers}get redirect(){return this[INTERNALS$2].redirect}get signal(){return this[INTERNALS$2].signal}clone(){return new Request(this)}}Body.mixIn(Request.prototype),Object.defineProperty(Request.prototype,Symbol.toStringTag,{value:"Request",writable:!1,enumerable:!1,configurable:!0}),Object.defineProperties(Request.prototype,{method:{enumerable:!0},url:{enumerable:!0},headers:{enumerable:!0},redirect:{enumerable:!0},clone:{enumerable:!0},signal:{enumerable:!0}});function getNodeRequestOptions(e){const t=e[INTERNALS$2].parsedURL,r=new Headers(e[INTERNALS$2].headers);if(r.has("Accept")||r.set("Accept","*/*"),!t.protocol||!t.hostname)throw new TypeError("Only absolute URLs are supported");if(!/^https?:$/.test(t.protocol))throw new TypeError("Only HTTP(S) protocols are supported");if(e.signal&&e.body instanceof Stream__default.default.Readable&&!streamDestructionSupported)throw new Error("Cancellation of streamed requests with AbortSignal is not supported in node < 8");let s=null;if(e.body==null&&/^(POST|PUT)$/i.test(e.method)&&(s="0"),e.body!=null){const i=getTotalBytes(e);typeof i=="number"&&(s=String(i))}s&&r.set("Content-Length",s),r.has("User-Agent")||r.set("User-Agent","node-fetch/1.0 (+https://github.com/bitinn/node-fetch)"),e.compress&&!r.has("Accept-Encoding")&&r.set("Accept-Encoding","gzip,deflate");let o=e.agent;return typeof o=="function"&&(o=o(t)),!r.has("Connection")&&!o&&r.set("Connection","close"),Object.assign({},t,{method:e.method,headers:exportNodeCompatibleHeaders(r),agent:o})}function AbortError(e){Error.call(this,e),this.type="aborted",this.message=e,Error.captureStackTrace(this,this.constructor)}AbortError.prototype=Object.create(Error.prototype),AbortError.prototype.constructor=AbortError,AbortError.prototype.name="AbortError";const PassThrough$1=Stream__default.default.PassThrough,resolve_url=Url__default.default.resolve;function fetch(e,t){if(!fetch.Promise)throw new Error("native promise missing, set fetch.Promise to your favorite alternative");return Body.Promise=fetch.Promise,new fetch.Promise(function(r,s){const o=new Request(e,t),i=getNodeRequestOptions(o),n=(i.protocol==="https:"?https__default.default:http__default.default).request,a=o.signal;let u=null;const d=function(){let R=new AbortError("The user aborted a request.");if(s(R),o.body&&o.body instanceof Stream__default.default.Readable&&o.body.destroy(R),!u||!u.body)return;u.body.emit("error",R)};if(a&&a.aborted){d();return}const l=function(){d(),y()},f=n(i);let g;a&&a.addEventListener("abort",l);function y(){f.abort(),a&&a.removeEventListener("abort",l),clearTimeout(g)}o.timeout&&f.once("socket",function(_){g=setTimeout(function(){s(new FetchError(`network timeout at: ${o.url}`,"request-timeout")),y()},o.timeout)}),f.on("error",function(_){s(new FetchError(`request to ${o.url} failed, reason: ${_.message}`,"system",_)),y()}),f.on("response",function(_){clearTimeout(g);const R=createHeadersLenient(_.headers);if(fetch.isRedirect(_.statusCode)){const b=R.get("Location"),E=b===null?null:resolve_url(o.url,b);switch(o.redirect){case"error":s(new FetchError(`uri requested responds with a redirect, redirect mode is set to error: ${o.url}`,"no-redirect")),y();return;case"manual":if(E!==null)try{R.set("Location",E)}catch(v){s(v)}break;case"follow":if(E===null)break;if(o.counter>=o.follow){s(new FetchError(`maximum redirect reached at: ${o.url}`,"max-redirect")),y();return}const w={headers:new Headers(o.headers),follow:o.follow,counter:o.counter+1,agent:o.agent,compress:o.compress,method:o.method,body:o.body,signal:o.signal,timeout:o.timeout,size:o.size};if(_.statusCode!==303&&o.body&&getTotalBytes(o)===null){s(new FetchError("Cannot follow redirect with body being a readable stream","unsupported-redirect")),y();return}(_.statusCode===303||(_.statusCode===301||_.statusCode===302)&&o.method==="POST")&&(w.method="GET",w.body=void 0,w.headers.delete("content-length")),r(fetch(new Request(E,w))),y();return}}_.once("end",function(){a&&a.removeEventListener("abort",l)});let c=_.pipe(new PassThrough$1);const p={url:o.url,status:_.statusCode,statusText:_.statusMessage,headers:R,size:o.size,timeout:o.timeout,counter:o.counter},m=R.get("Content-Encoding");if(!o.compress||o.method==="HEAD"||m===null||_.statusCode===204||_.statusCode===304){u=new Response(c,p),r(u);return}const T={flush:zlib__default.default.Z_SYNC_FLUSH,finishFlush:zlib__default.default.Z_SYNC_FLUSH};if(m=="gzip"||m=="x-gzip"){c=c.pipe(zlib__default.default.createGunzip(T)),u=new Response(c,p),r(u);return}if(m=="deflate"||m=="x-deflate"){const b=_.pipe(new PassThrough$1);b.once("data",function(E){(E[0]&15)===8?c=c.pipe(zlib__default.default.createInflate()):c=c.pipe(zlib__default.default.createInflateRaw()),u=new Response(c,p),r(u)});return}if(m=="br"&&typeof zlib__default.default.createBrotliDecompress=="function"){c=c.pipe(zlib__default.default.createBrotliDecompress()),u=new Response(c,p),r(u);return}u=new Response(c,p),r(u)}),writeToStream(f,o)})}fetch.isRedirect=function(e){return e===301||e===302||e===303||e===307||e===308},fetch.Promise=global.Promise;class Deprecation extends Error{constructor(e){super(e);Error.captureStackTrace&&Error.captureStackTrace(this,this.constructor),this.name="Deprecation"}}var wrappy_1=wrappy;function wrappy(e,t){if(e&&t)return wrappy(e)(t);if(typeof e!="function")throw new TypeError("need wrapper function");return Object.keys(e).forEach(function(s){r[s]=e[s]}),r;function r(){for(var s=new Array(arguments.length),o=0;o<s.length;o++)s[o]=arguments[o];var i=e.apply(this,s),n=s[s.length-1];return typeof i=="function"&&i!==n&&Object.keys(n).forEach(function(a){i[a]=n[a]}),i}}var once_1=wrappy_1(once),strict=wrappy_1(onceStrict);once.proto=once(function(){Object.defineProperty(Function.prototype,"once",{value:function(){return once(this)},configurable:!0}),Object.defineProperty(Function.prototype,"onceStrict",{value:function(){return onceStrict(this)},configurable:!0})});function once(e){var t=function(){return t.called?t.value:(t.called=!0,t.value=e.apply(this,arguments))};return t.called=!1,t}function onceStrict(e){var t=function(){if(t.called)throw new Error(t.onceError);return t.called=!0,t.value=e.apply(this,arguments)},r=e.name||"Function wrapped with `once`";return t.onceError=r+" shouldn't be called more than once",t.called=!1,t}once_1.strict=strict;const logOnce=once_1(e=>console.warn(e));class RequestError extends Error{constructor(e,t,r){super(e);Error.captureStackTrace&&Error.captureStackTrace(this,this.constructor),this.name="HttpError",this.status=t,Object.defineProperty(this,"code",{get(){return logOnce(new Deprecation("[@octokit/request-error] `error.code` is deprecated, use `error.status`.")),t}}),this.headers=r.headers||{};const s=Object.assign({},r.request);r.request.headers.authorization&&(s.headers=Object.assign({},r.request.headers,{authorization:r.request.headers.authorization.replace(/ .*$/," [REDACTED]")})),s.url=s.url.replace(/\bclient_secret=\w+/g,"client_secret=[REDACTED]").replace(/\baccess_token=\w+/g,"access_token=[REDACTED]"),this.request=s}}const VERSION$1="5.4.9";function getBufferResponse(e){return e.arrayBuffer()}function fetchWrapper(e){(isPlainObject(e.body)||Array.isArray(e.body))&&(e.body=JSON.stringify(e.body));let t={},r,s;const o=e.request&&e.request.fetch||fetch;return o(e.url,Object.assign({method:e.method,body:e.body,headers:e.headers,redirect:e.redirect},e.request)).then(i=>{s=i.url,r=i.status;for(const a of i.headers)t[a[0]]=a[1];if(r===204||r===205)return;if(e.method==="HEAD"){if(r<400)return;throw new RequestError(i.statusText,r,{headers:t,request:e})}if(r===304)throw new RequestError("Not modified",r,{headers:t,request:e});if(r>=400)return i.text().then(a=>{const u=new RequestError(a,r,{headers:t,request:e});try{let d=JSON.parse(u.message);Object.assign(u,d);let l=d.errors;u.message=u.message+": "+l.map(JSON.stringify).join(", ")}catch(d){}throw u});const n=i.headers.get("content-type");return/application\/json/.test(n)?i.json():!n||/^text\/|charset=utf-8$/.test(n)?i.text():getBufferResponse(i)}).then(i=>({status:r,url:s,headers:t,data:i})).catch(i=>{throw i instanceof RequestError?i:new RequestError(i.message,500,{headers:t,request:e})})}function withDefaults$1(e,t){const r=e.defaults(t),s=function(o,i){const n=r.merge(o,i);if(!n.request||!n.request.hook)return fetchWrapper(r.parse(n));const a=(u,d)=>fetchWrapper(r.parse(r.merge(u,d)));return Object.assign(a,{endpoint:r,defaults:withDefaults$1.bind(null,r)}),n.request.hook(a,n)};return Object.assign(s,{endpoint:r,defaults:withDefaults$1.bind(null,r)})}const request=withDefaults$1(endpoint,{headers:{"user-agent":`octokit-request.js/${VERSION$1} ${getUserAgent()}`}}),VERSION$2="4.5.6";class GraphqlError extends Error{constructor(e,t){const r=t.data.errors[0].message;super(r);Object.assign(this,t.data),Object.assign(this,{headers:t.headers}),this.name="GraphqlError",this.request=e,Error.captureStackTrace&&Error.captureStackTrace(this,this.constructor)}}const NON_VARIABLE_OPTIONS=["method","baseUrl","url","headers","request","query","mediaType"],GHES_V3_SUFFIX_REGEX=/\/api\/v3\/?$/;function graphql(e,t,r){if(typeof t=="string"&&r&&"query"in r)return Promise.reject(new Error('[@octokit/graphql] "query" cannot be used as variable name'));const s=typeof t=="string"?Object.assign({query:t},r):t,o=Object.keys(s).reduce((n,a)=>NON_VARIABLE_OPTIONS.includes(a)?(n[a]=s[a],n):(n.variables||(n.variables={}),n.variables[a]=s[a],n),{}),i=s.baseUrl||e.endpoint.DEFAULTS.baseUrl;return GHES_V3_SUFFIX_REGEX.test(i)&&(o.url=i.replace(GHES_V3_SUFFIX_REGEX,"/api/graphql")),e(o).then(n=>{if(n.data.errors){const a={};for(const u of Object.keys(n.headers))a[u]=n.headers[u];throw new GraphqlError(o,{headers:a,data:n.data})}return n.data.data})}function withDefaults$2(e,t){const r=e.defaults(t),s=(o,i)=>graphql(r,o,i);return Object.assign(s,{defaults:withDefaults$2.bind(null,r),endpoint:request.endpoint})}const graphql$1=withDefaults$2(request,{headers:{"user-agent":`octokit-graphql.js/${VERSION$2} ${getUserAgent()}`},method:"POST",url:"/graphql"});function withCustomRequest(e){return withDefaults$2(e,{method:"POST",url:"/graphql"})}async function auth(e){const t=e.split(/\./).length===3?"app":/^v\d+\./.test(e)?"installation":"oauth";return{type:"token",token:e,tokenType:t}}function withAuthorizationPrefix(e){return e.split(/\./).length===3?`bearer ${e}`:`token ${e}`}async function hook(e,t,r,s){const o=t.endpoint.merge(r,s);return o.headers.authorization=withAuthorizationPrefix(e),t(o)}const createTokenAuth=function(t){if(!t)throw new Error("[@octokit/auth-token] No token passed to createTokenAuth");if(typeof t!="string")throw new Error("[@octokit/auth-token] Token passed to createTokenAuth is not a string");return t=t.replace(/^(token|bearer) +/i,""),Object.assign(auth.bind(null,t),{hook:hook.bind(null,t)})},VERSION$3="3.1.3";class Octokit{constructor(e={}){const t=new Collection,r={baseUrl:request.endpoint.DEFAULTS.baseUrl,headers:{},request:Object.assign({},e.request,{hook:t.bind(null,"request")}),mediaType:{previews:[],format:""}};if(r.headers["user-agent"]=[e.userAgent,`octokit-core.js/${VERSION$3} ${getUserAgent()}`].filter(Boolean).join(" "),e.baseUrl&&(r.baseUrl=e.baseUrl),e.previews&&(r.mediaType.previews=e.previews),e.timeZone&&(r.headers["time-zone"]=e.timeZone),this.request=request.defaults(r),this.graphql=withCustomRequest(this.request).defaults(r),this.log=Object.assign({debug:()=>{},info:()=>{},warn:console.warn.bind(console),error:console.error.bind(console)},e.log),this.hook=t,e.authStrategy){const o=e.authStrategy(Object.assign({request:this.request},e.auth));t.wrap("request",o.hook),this.auth=o}else if(!e.auth)this.auth=async()=>({type:"unauthenticated"});else{const o=createTokenAuth(e.auth);t.wrap("request",o.hook),this.auth=o}const s=this.constructor;s.plugins.forEach(o=>{Object.assign(this,o(this,e))})}static defaults(e){const t=class extends this{constructor(...r){const s=r[0]||{};if(typeof e=="function"){super(e(s));return}super(Object.assign({},e,s,s.userAgent&&e.userAgent?{userAgent:`${s.userAgent} ${e.userAgent}`}:null))}};return t}static plugin(...e){var t;const r=this.plugins,s=(t=class extends this{},t.plugins=r.concat(e.filter(o=>!r.includes(o))),t);return s}}Octokit.VERSION=VERSION$3,Octokit.plugins=[];var distWeb=Object.freeze({__proto__:null,Octokit});const Endpoints={actions:{addSelectedRepoToOrgSecret:["PUT /orgs/{org}/actions/secrets/{secret_name}/repositories/{repository_id}"],cancelWorkflowRun:["POST /repos/{owner}/{repo}/actions/runs/{run_id}/cancel"],createOrUpdateOrgSecret:["PUT /orgs/{org}/actions/secrets/{secret_name}"],createOrUpdateRepoSecret:["PUT /repos/{owner}/{repo}/actions/secrets/{secret_name}"],createRegistrationTokenForOrg:["POST /orgs/{org}/actions/runners/registration-token"],createRegistrationTokenForRepo:["POST /repos/{owner}/{repo}/actions/runners/registration-token"],createRemoveTokenForOrg:["POST /orgs/{org}/actions/runners/remove-token"],createRemoveTokenForRepo:["POST /repos/{owner}/{repo}/actions/runners/remove-token"],createWorkflowDispatch:["POST /repos/{owner}/{repo}/actions/workflows/{workflow_id}/dispatches"],deleteArtifact:["DELETE /repos/{owner}/{repo}/actions/artifacts/{artifact_id}"],deleteOrgSecret:["DELETE /orgs/{org}/actions/secrets/{secret_name}"],deleteRepoSecret:["DELETE /repos/{owner}/{repo}/actions/secrets/{secret_name}"],deleteSelfHostedRunnerFromOrg:["DELETE /orgs/{org}/actions/runners/{runner_id}"],deleteSelfHostedRunnerFromRepo:["DELETE /repos/{owner}/{repo}/actions/runners/{runner_id}"],deleteWorkflowRun:["DELETE /repos/{owner}/{repo}/actions/runs/{run_id}"],deleteWorkflowRunLogs:["DELETE /repos/{owner}/{repo}/actions/runs/{run_id}/logs"],downloadArtifact:["GET /repos/{owner}/{repo}/actions/artifacts/{artifact_id}/{archive_format}"],downloadJobLogsForWorkflowRun:["GET /repos/{owner}/{repo}/actions/jobs/{job_id}/logs"],downloadWorkflowRunLogs:["GET /repos/{owner}/{repo}/actions/runs/{run_id}/logs"],getArtifact:["GET /repos/{owner}/{repo}/actions/artifacts/{artifact_id}"],getJobForWorkflowRun:["GET /repos/{owner}/{repo}/actions/jobs/{job_id}"],getOrgPublicKey:["GET /orgs/{org}/actions/secrets/public-key"],getOrgSecret:["GET /orgs/{org}/actions/secrets/{secret_name}"],getRepoPublicKey:["GET /repos/{owner}/{repo}/actions/secrets/public-key"],getRepoSecret:["GET /repos/{owner}/{repo}/actions/secrets/{secret_name}"],getSelfHostedRunnerForOrg:["GET /orgs/{org}/actions/runners/{runner_id}"],getSelfHostedRunnerForRepo:["GET /repos/{owner}/{repo}/actions/runners/{runner_id}"],getWorkflow:["GET /repos/{owner}/{repo}/actions/workflows/{workflow_id}"],getWorkflowRun:["GET /repos/{owner}/{repo}/actions/runs/{run_id}"],getWorkflowRunUsage:["GET /repos/{owner}/{repo}/actions/runs/{run_id}/timing"],getWorkflowUsage:["GET /repos/{owner}/{repo}/actions/workflows/{workflow_id}/timing"],listArtifactsForRepo:["GET /repos/{owner}/{repo}/actions/artifacts"],listJobsForWorkflowRun:["GET /repos/{owner}/{repo}/actions/runs/{run_id}/jobs"],listOrgSecrets:["GET /orgs/{org}/actions/secrets"],listRepoSecrets:["GET /repos/{owner}/{repo}/actions/secrets"],listRepoWorkflows:["GET /repos/{owner}/{repo}/actions/workflows"],listRunnerApplicationsForOrg:["GET /orgs/{org}/actions/runners/downloads"],listRunnerApplicationsForRepo:["GET /repos/{owner}/{repo}/actions/runners/downloads"],listSelectedReposForOrgSecret:["GET /orgs/{org}/actions/secrets/{secret_name}/repositories"],listSelfHostedRunnersForOrg:["GET /orgs/{org}/actions/runners"],listSelfHostedRunnersForRepo:["GET /repos/{owner}/{repo}/actions/runners"],listWorkflowRunArtifacts:["GET /repos/{owner}/{repo}/actions/runs/{run_id}/artifacts"],listWorkflowRuns:["GET /repos/{owner}/{repo}/actions/workflows/{workflow_id}/runs"],listWorkflowRunsForRepo:["GET /repos/{owner}/{repo}/actions/runs"],reRunWorkflow:["POST /repos/{owner}/{repo}/actions/runs/{run_id}/rerun"],removeSelectedRepoFromOrgSecret:["DELETE /orgs/{org}/actions/secrets/{secret_name}/repositories/{repository_id}"],setSelectedReposForOrgSecret:["PUT /orgs/{org}/actions/secrets/{secret_name}/repositories"]},activity:{checkRepoIsStarredByAuthenticatedUser:["GET /user/starred/{owner}/{repo}"],deleteRepoSubscription:["DELETE /repos/{owner}/{repo}/subscription"],deleteThreadSubscription:["DELETE /notifications/threads/{thread_id}/subscription"],getFeeds:["GET /feeds"],getRepoSubscription:["GET /repos/{owner}/{repo}/subscription"],getThread:["GET /notifications/threads/{thread_id}"],getThreadSubscriptionForAuthenticatedUser:["GET /notifications/threads/{thread_id}/subscription"],listEventsForAuthenticatedUser:["GET /users/{username}/events"],listNotificationsForAuthenticatedUser:["GET /notifications"],listOrgEventsForAuthenticatedUser:["GET /users/{username}/events/orgs/{org}"],listPublicEvents:["GET /events"],listPublicEventsForRepoNetwork:["GET /networks/{owner}/{repo}/events"],listPublicEventsForUser:["GET /users/{username}/events/public"],listPublicOrgEvents:["GET /orgs/{org}/events"],listReceivedEventsForUser:["GET /users/{username}/received_events"],listReceivedPublicEventsForUser:["GET /users/{username}/received_events/public"],listRepoEvents:["GET /repos/{owner}/{repo}/events"],listRepoNotificationsForAuthenticatedUser:["GET /repos/{owner}/{repo}/notifications"],listReposStarredByAuthenticatedUser:["GET /user/starred"],listReposStarredByUser:["GET /users/{username}/starred"],listReposWatchedByUser:["GET /users/{username}/subscriptions"],listStargazersForRepo:["GET /repos/{owner}/{repo}/stargazers"],listWatchedReposForAuthenticatedUser:["GET /user/subscriptions"],listWatchersForRepo:["GET /repos/{owner}/{repo}/subscribers"],markNotificationsAsRead:["PUT /notifications"],markRepoNotificationsAsRead:["PUT /repos/{owner}/{repo}/notifications"],markThreadAsRead:["PATCH /notifications/threads/{thread_id}"],setRepoSubscription:["PUT /repos/{owner}/{repo}/subscription"],setThreadSubscription:["PUT /notifications/threads/{thread_id}/subscription"],starRepoForAuthenticatedUser:["PUT /user/starred/{owner}/{repo}"],unstarRepoForAuthenticatedUser:["DELETE /user/starred/{owner}/{repo}"]},apps:{addRepoToInstallation:["PUT /user/installations/{installation_id}/repositories/{repository_id}"],checkToken:["POST /applications/{client_id}/token"],createContentAttachment:["POST /content_references/{content_reference_id}/attachments",{mediaType:{previews:["corsair"]}}],createFromManifest:["POST /app-manifests/{code}/conversions"],createInstallationAccessToken:["POST /app/installations/{installation_id}/access_tokens"],deleteAuthorization:["DELETE /applications/{client_id}/grant"],deleteInstallation:["DELETE /app/installations/{installation_id}"],deleteToken:["DELETE /applications/{client_id}/token"],getAuthenticated:["GET /app"],getBySlug:["GET /apps/{app_slug}"],getInstallation:["GET /app/installations/{installation_id}"],getOrgInstallation:["GET /orgs/{org}/installation"],getRepoInstallation:["GET /repos/{owner}/{repo}/installation"],getSubscriptionPlanForAccount:["GET /marketplace_listing/accounts/{account_id}"],getSubscriptionPlanForAccountStubbed:["GET /marketplace_listing/stubbed/accounts/{account_id}"],getUserInstallation:["GET /users/{username}/installation"],listAccountsForPlan:["GET /marketplace_listing/plans/{plan_id}/accounts"],listAccountsForPlanStubbed:["GET /marketplace_listing/stubbed/plans/{plan_id}/accounts"],listInstallationReposForAuthenticatedUser:["GET /user/installations/{installation_id}/repositories"],listInstallations:["GET /app/installations"],listInstallationsForAuthenticatedUser:["GET /user/installations"],listPlans:["GET /marketplace_listing/plans"],listPlansStubbed:["GET /marketplace_listing/stubbed/plans"],listReposAccessibleToInstallation:["GET /installation/repositories"],listSubscriptionsForAuthenticatedUser:["GET /user/marketplace_purchases"],listSubscriptionsForAuthenticatedUserStubbed:["GET /user/marketplace_purchases/stubbed"],removeRepoFromInstallation:["DELETE /user/installations/{installation_id}/repositories/{repository_id}"],resetToken:["PATCH /applications/{client_id}/token"],revokeInstallationAccessToken:["DELETE /installation/token"],suspendInstallation:["PUT /app/installations/{installation_id}/suspended"],unsuspendInstallation:["DELETE /app/installations/{installation_id}/suspended"]},billing:{getGithubActionsBillingOrg:["GET /orgs/{org}/settings/billing/actions"],getGithubActionsBillingUser:["GET /users/{username}/settings/billing/actions"],getGithubPackagesBillingOrg:["GET /orgs/{org}/settings/billing/packages"],getGithubPackagesBillingUser:["GET /users/{username}/settings/billing/packages"],getSharedStorageBillingOrg:["GET /orgs/{org}/settings/billing/shared-storage"],getSharedStorageBillingUser:["GET /users/{username}/settings/billing/shared-storage"]},checks:{create:["POST /repos/{owner}/{repo}/check-runs",{mediaType:{previews:["antiope"]}}],createSuite:["POST /repos/{owner}/{repo}/check-suites",{mediaType:{previews:["antiope"]}}],get:["GET /repos/{owner}/{repo}/check-runs/{check_run_id}",{mediaType:{previews:["antiope"]}}],getSuite:["GET /repos/{owner}/{repo}/check-suites/{check_suite_id}",{mediaType:{previews:["antiope"]}}],listAnnotations:["GET /repos/{owner}/{repo}/check-runs/{check_run_id}/annotations",{mediaType:{previews:["antiope"]}}],listForRef:["GET /repos/{owner}/{repo}/commits/{ref}/check-runs",{mediaType:{previews:["antiope"]}}],listForSuite:["GET /repos/{owner}/{repo}/check-suites/{check_suite_id}/check-runs",{mediaType:{previews:["antiope"]}}],listSuitesForRef:["GET /repos/{owner}/{repo}/commits/{ref}/check-suites",{mediaType:{previews:["antiope"]}}],rerequestSuite:["POST /repos/{owner}/{repo}/check-suites/{check_suite_id}/rerequest",{mediaType:{previews:["antiope"]}}],setSuitesPreferences:["PATCH /repos/{owner}/{repo}/check-suites/preferences",{mediaType:{previews:["antiope"]}}],update:["PATCH /repos/{owner}/{repo}/check-runs/{check_run_id}",{mediaType:{previews:["antiope"]}}]},codeScanning:{getAlert:["GET /repos/{owner}/{repo}/code-scanning/alerts/{alert_number}",{},{renamedParameters:{alert_id:"alert_number"}}],listAlertsForRepo:["GET /repos/{owner}/{repo}/code-scanning/alerts"],listRecentAnalyses:["GET /repos/{owner}/{repo}/code-scanning/analyses"],updateAlert:["PATCH /repos/{owner}/{repo}/code-scanning/alerts/{alert_number}"],uploadSarif:["POST /repos/{owner}/{repo}/code-scanning/sarifs"]},codesOfConduct:{getAllCodesOfConduct:["GET /codes_of_conduct",{mediaType:{previews:["scarlet-witch"]}}],getConductCode:["GET /codes_of_conduct/{key}",{mediaType:{previews:["scarlet-witch"]}}],getForRepo:["GET /repos/{owner}/{repo}/community/code_of_conduct",{mediaType:{previews:["scarlet-witch"]}}]},emojis:{get:["GET /emojis"]},gists:{checkIsStarred:["GET /gists/{gist_id}/star"],create:["POST /gists"],createComment:["POST /gists/{gist_id}/comments"],delete:["DELETE /gists/{gist_id}"],deleteComment:["DELETE /gists/{gist_id}/comments/{comment_id}"],fork:["POST /gists/{gist_id}/forks"],get:["GET /gists/{gist_id}"],getComment:["GET /gists/{gist_id}/comments/{comment_id}"],getRevision:["GET /gists/{gist_id}/{sha}"],list:["GET /gists"],listComments:["GET /gists/{gist_id}/comments"],listCommits:["GET /gists/{gist_id}/commits"],listForUser:["GET /users/{username}/gists"],listForks:["GET /gists/{gist_id}/forks"],listPublic:["GET /gists/public"],listStarred:["GET /gists/starred"],star:["PUT /gists/{gist_id}/star"],unstar:["DELETE /gists/{gist_id}/star"],update:["PATCH /gists/{gist_id}"],updateComment:["PATCH /gists/{gist_id}/comments/{comment_id}"]},git:{createBlob:["POST /repos/{owner}/{repo}/git/blobs"],createCommit:["POST /repos/{owner}/{repo}/git/commits"],createRef:["POST /repos/{owner}/{repo}/git/refs"],createTag:["POST /repos/{owner}/{repo}/git/tags"],createTree:["POST /repos/{owner}/{repo}/git/trees"],deleteRef:["DELETE /repos/{owner}/{repo}/git/refs/{ref}"],getBlob:["GET /repos/{owner}/{repo}/git/blobs/{file_sha}"],getCommit:["GET /repos/{owner}/{repo}/git/commits/{commit_sha}"],getRef:["GET /repos/{owner}/{repo}/git/ref/{ref}"],getTag:["GET /repos/{owner}/{repo}/git/tags/{tag_sha}"],getTree:["GET /repos/{owner}/{repo}/git/trees/{tree_sha}"],listMatchingRefs:["GET /repos/{owner}/{repo}/git/matching-refs/{ref}"],updateRef:["PATCH /repos/{owner}/{repo}/git/refs/{ref}"]},gitignore:{getAllTemplates:["GET /gitignore/templates"],getTemplate:["GET /gitignore/templates/{name}"]},interactions:{getRestrictionsForOrg:["GET /orgs/{org}/interaction-limits",{mediaType:{previews:["sombra"]}}],getRestrictionsForRepo:["GET /repos/{owner}/{repo}/interaction-limits",{mediaType:{previews:["sombra"]}}],removeRestrictionsForOrg:["DELETE /orgs/{org}/interaction-limits",{mediaType:{previews:["sombra"]}}],removeRestrictionsForRepo:["DELETE /repos/{owner}/{repo}/interaction-limits",{mediaType:{previews:["sombra"]}}],setRestrictionsForOrg:["PUT /orgs/{org}/interaction-limits",{mediaType:{previews:["sombra"]}}],setRestrictionsForRepo:["PUT /repos/{owner}/{repo}/interaction-limits",{mediaType:{previews:["sombra"]}}]},issues:{addAssignees:["POST /repos/{owner}/{repo}/issues/{issue_number}/assignees"],addLabels:["POST /repos/{owner}/{repo}/issues/{issue_number}/labels"],checkUserCanBeAssigned:["GET /repos/{owner}/{repo}/assignees/{assignee}"],create:["POST /repos/{owner}/{repo}/issues"],createComment:["POST /repos/{owner}/{repo}/issues/{issue_number}/comments"],createLabel:["POST /repos/{owner}/{repo}/labels"],createMilestone:["POST /repos/{owner}/{repo}/milestones"],deleteComment:["DELETE /repos/{owner}/{repo}/issues/comments/{comment_id}"],deleteLabel:["DELETE /repos/{owner}/{repo}/labels/{name}"],deleteMilestone:["DELETE /repos/{owner}/{repo}/milestones/{milestone_number}"],get:["GET /repos/{owner}/{repo}/issues/{issue_number}"],getComment:["GET /repos/{owner}/{repo}/issues/comments/{comment_id}"],getEvent:["GET /repos/{owner}/{repo}/issues/events/{event_id}"],getLabel:["GET /repos/{owner}/{repo}/labels/{name}"],getMilestone:["GET /repos/{owner}/{repo}/milestones/{milestone_number}"],list:["GET /issues"],listAssignees:["GET /repos/{owner}/{repo}/assignees"],listComments:["GET /repos/{owner}/{repo}/issues/{issue_number}/comments"],listCommentsForRepo:["GET /repos/{owner}/{repo}/issues/comments"],listEvents:["GET /repos/{owner}/{repo}/issues/{issue_number}/events"],listEventsForRepo:["GET /repos/{owner}/{repo}/issues/events"],listEventsForTimeline:["GET /repos/{owner}/{repo}/issues/{issue_number}/timeline",{mediaType:{previews:["mockingbird"]}}],listForAuthenticatedUser:["GET /user/issues"],listForOrg:["GET /orgs/{org}/issues"],listForRepo:["GET /repos/{owner}/{repo}/issues"],listLabelsForMilestone:["GET /repos/{owner}/{repo}/milestones/{milestone_number}/labels"],listLabelsForRepo:["GET /repos/{owner}/{repo}/labels"],listLabelsOnIssue:["GET /repos/{owner}/{repo}/issues/{issue_number}/labels"],listMilestones:["GET /repos/{owner}/{repo}/milestones"],lock:["PUT /repos/{owner}/{repo}/issues/{issue_number}/lock"],removeAllLabels:["DELETE /repos/{owner}/{repo}/issues/{issue_number}/labels"],removeAssignees:["DELETE /repos/{owner}/{repo}/issues/{issue_number}/assignees"],removeLabel:["DELETE /repos/{owner}/{repo}/issues/{issue_number}/labels/{name}"],setLabels:["PUT /repos/{owner}/{repo}/issues/{issue_number}/labels"],unlock:["DELETE /repos/{owner}/{repo}/issues/{issue_number}/lock"],update:["PATCH /repos/{owner}/{repo}/issues/{issue_number}"],updateComment:["PATCH /repos/{owner}/{repo}/issues/comments/{comment_id}"],updateLabel:["PATCH /repos/{owner}/{repo}/labels/{name}"],updateMilestone:["PATCH /repos/{owner}/{repo}/milestones/{milestone_number}"]},licenses:{get:["GET /licenses/{license}"],getAllCommonlyUsed:["GET /licenses"],getForRepo:["GET /repos/{owner}/{repo}/license"]},markdown:{render:["POST /markdown"],renderRaw:["POST /markdown/raw",{headers:{"content-type":"text/plain; charset=utf-8"}}]},meta:{get:["GET /meta"]},migrations:{cancelImport:["DELETE /repos/{owner}/{repo}/import"],deleteArchiveForAuthenticatedUser:["DELETE /user/migrations/{migration_id}/archive",{mediaType:{previews:["wyandotte"]}}],deleteArchiveForOrg:["DELETE /orgs/{org}/migrations/{migration_id}/archive",{mediaType:{previews:["wyandotte"]}}],downloadArchiveForOrg:["GET /orgs/{org}/migrations/{migration_id}/archive",{mediaType:{previews:["wyandotte"]}}],getArchiveForAuthenticatedUser:["GET /user/migrations/{migration_id}/archive",{mediaType:{previews:["wyandotte"]}}],getCommitAuthors:["GET /repos/{owner}/{repo}/import/authors"],getImportStatus:["GET /repos/{owner}/{repo}/import"],getLargeFiles:["GET /repos/{owner}/{repo}/import/large_files"],getStatusForAuthenticatedUser:["GET /user/migrations/{migration_id}",{mediaType:{previews:["wyandotte"]}}],getStatusForOrg:["GET /orgs/{org}/migrations/{migration_id}",{mediaType:{previews:["wyandotte"]}}],listForAuthenticatedUser:["GET /user/migrations",{mediaType:{previews:["wyandotte"]}}],listForOrg:["GET /orgs/{org}/migrations",{mediaType:{previews:["wyandotte"]}}],listReposForOrg:["GET /orgs/{org}/migrations/{migration_id}/repositories",{mediaType:{previews:["wyandotte"]}}],listReposForUser:["GET /user/migrations/{migration_id}/repositories",{mediaType:{previews:["wyandotte"]}}],mapCommitAuthor:["PATCH /repos/{owner}/{repo}/import/authors/{author_id}"],setLfsPreference:["PATCH /repos/{owner}/{repo}/import/lfs"],startForAuthenticatedUser:["POST /user/migrations"],startForOrg:["POST /orgs/{org}/migrations"],startImport:["PUT /repos/{owner}/{repo}/import"],unlockRepoForAuthenticatedUser:["DELETE /user/migrations/{migration_id}/repos/{repo_name}/lock",{mediaType:{previews:["wyandotte"]}}],unlockRepoForOrg:["DELETE /orgs/{org}/migrations/{migration_id}/repos/{repo_name}/lock",{mediaType:{previews:["wyandotte"]}}],updateImport:["PATCH /repos/{owner}/{repo}/import"]},orgs:{blockUser:["PUT /orgs/{org}/blocks/{username}"],checkBlockedUser:["GET /orgs/{org}/blocks/{username}"],checkMembershipForUser:["GET /orgs/{org}/members/{username}"],checkPublicMembershipForUser:["GET /orgs/{org}/public_members/{username}"],convertMemberToOutsideCollaborator:["PUT /orgs/{org}/outside_collaborators/{username}"],createInvitation:["POST /orgs/{org}/invitations"],createWebhook:["POST /orgs/{org}/hooks"],deleteWebhook:["DELETE /orgs/{org}/hooks/{hook_id}"],get:["GET /orgs/{org}"],getMembershipForAuthenticatedUser:["GET /user/memberships/orgs/{org}"],getMembershipForUser:["GET /orgs/{org}/memberships/{username}"],getWebhook:["GET /orgs/{org}/hooks/{hook_id}"],list:["GET /organizations"],listAppInstallations:["GET /orgs/{org}/installations"],listBlockedUsers:["GET /orgs/{org}/blocks"],listForAuthenticatedUser:["GET /user/orgs"],listForUser:["GET /users/{username}/orgs"],listInvitationTeams:["GET /orgs/{org}/invitations/{invitation_id}/teams"],listMembers:["GET /orgs/{org}/members"],listMembershipsForAuthenticatedUser:["GET /user/memberships/orgs"],listOutsideCollaborators:["GET /orgs/{org}/outside_collaborators"],listPendingInvitations:["GET /orgs/{org}/invitations"],listPublicMembers:["GET /orgs/{org}/public_members"],listWebhooks:["GET /orgs/{org}/hooks"],pingWebhook:["POST /orgs/{org}/hooks/{hook_id}/pings"],removeMember:["DELETE /orgs/{org}/members/{username}"],removeMembershipForUser:["DELETE /orgs/{org}/memberships/{username}"],removeOutsideCollaborator:["DELETE /orgs/{org}/outside_collaborators/{username}"],removePublicMembershipForAuthenticatedUser:["DELETE /orgs/{org}/public_members/{username}"],setMembershipForUser:["PUT /orgs/{org}/memberships/{username}"],setPublicMembershipForAuthenticatedUser:["PUT /orgs/{org}/public_members/{username}"],unblockUser:["DELETE /orgs/{org}/blocks/{username}"],update:["PATCH /orgs/{org}"],updateMembershipForAuthenticatedUser:["PATCH /user/memberships/orgs/{org}"],updateWebhook:["PATCH /orgs/{org}/hooks/{hook_id}"]},projects:{addCollaborator:["PUT /projects/{project_id}/collaborators/{username}",{mediaType:{previews:["inertia"]}}],createCard:["POST /projects/columns/{column_id}/cards",{mediaType:{previews:["inertia"]}}],createColumn:["POST /projects/{project_id}/columns",{mediaType:{previews:["inertia"]}}],createForAuthenticatedUser:["POST /user/projects",{mediaType:{previews:["inertia"]}}],createForOrg:["POST /orgs/{org}/projects",{mediaType:{previews:["inertia"]}}],createForRepo:["POST /repos/{owner}/{repo}/projects",{mediaType:{previews:["inertia"]}}],delete:["DELETE /projects/{project_id}",{mediaType:{previews:["inertia"]}}],deleteCard:["DELETE /projects/columns/cards/{card_id}",{mediaType:{previews:["inertia"]}}],deleteColumn:["DELETE /projects/columns/{column_id}",{mediaType:{previews:["inertia"]}}],get:["GET /projects/{project_id}",{mediaType:{previews:["inertia"]}}],getCard:["GET /projects/columns/cards/{card_id}",{mediaType:{previews:["inertia"]}}],getColumn:["GET /projects/columns/{column_id}",{mediaType:{previews:["inertia"]}}],getPermissionForUser:["GET /projects/{project_id}/collaborators/{username}/permission",{mediaType:{previews:["inertia"]}}],listCards:["GET /projects/columns/{column_id}/cards",{mediaType:{previews:["inertia"]}}],listCollaborators:["GET /projects/{project_id}/collaborators",{mediaType:{previews:["inertia"]}}],listColumns:["GET /projects/{project_id}/columns",{mediaType:{previews:["inertia"]}}],listForOrg:["GET /orgs/{org}/projects",{mediaType:{previews:["inertia"]}}],listForRepo:["GET /repos/{owner}/{repo}/projects",{mediaType:{previews:["inertia"]}}],listForUser:["GET /users/{username}/projects",{mediaType:{previews:["inertia"]}}],moveCard:["POST /projects/columns/cards/{card_id}/moves",{mediaType:{previews:["inertia"]}}],moveColumn:["POST /projects/columns/{column_id}/moves",{mediaType:{previews:["inertia"]}}],removeCollaborator:["DELETE /projects/{project_id}/collaborators/{username}",{mediaType:{previews:["inertia"]}}],update:["PATCH /projects/{project_id}",{mediaType:{previews:["inertia"]}}],updateCard:["PATCH /projects/columns/cards/{card_id}",{mediaType:{previews:["inertia"]}}],updateColumn:["PATCH /projects/columns/{column_id}",{mediaType:{previews:["inertia"]}}]},pulls:{checkIfMerged:["GET /repos/{owner}/{repo}/pulls/{pull_number}/merge"],create:["POST /repos/{owner}/{repo}/pulls"],createReplyForReviewComment:["POST /repos/{owner}/{repo}/pulls/{pull_number}/comments/{comment_id}/replies"],createReview:["POST /repos/{owner}/{repo}/pulls/{pull_number}/reviews"],createReviewComment:["POST /repos/{owner}/{repo}/pulls/{pull_number}/comments"],deletePendingReview:["DELETE /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}"],deleteReviewComment:["DELETE /repos/{owner}/{repo}/pulls/comments/{comment_id}"],dismissReview:["PUT /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}/dismissals"],get:["GET /repos/{owner}/{repo}/pulls/{pull_number}"],getReview:["GET /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}"],getReviewComment:["GET /repos/{owner}/{repo}/pulls/comments/{comment_id}"],list:["GET /repos/{owner}/{repo}/pulls"],listCommentsForReview:["GET /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}/comments"],listCommits:["GET /repos/{owner}/{repo}/pulls/{pull_number}/commits"],listFiles:["GET /repos/{owner}/{repo}/pulls/{pull_number}/files"],listRequestedReviewers:["GET /repos/{owner}/{repo}/pulls/{pull_number}/requested_reviewers"],listReviewComments:["GET /repos/{owner}/{repo}/pulls/{pull_number}/comments"],listReviewCommentsForRepo:["GET /repos/{owner}/{repo}/pulls/comments"],listReviews:["GET /repos/{owner}/{repo}/pulls/{pull_number}/reviews"],merge:["PUT /repos/{owner}/{repo}/pulls/{pull_number}/merge"],removeRequestedReviewers:["DELETE /repos/{owner}/{repo}/pulls/{pull_number}/requested_reviewers"],requestReviewers:["POST /repos/{owner}/{repo}/pulls/{pull_number}/requested_reviewers"],submitReview:["POST /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}/events"],update:["PATCH /repos/{owner}/{repo}/pulls/{pull_number}"],updateBranch:["PUT /repos/{owner}/{repo}/pulls/{pull_number}/update-branch",{mediaType:{previews:["lydian"]}}],updateReview:["PUT /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}"],updateReviewComment:["PATCH /repos/{owner}/{repo}/pulls/comments/{comment_id}"]},rateLimit:{get:["GET /rate_limit"]},reactions:{createForCommitComment:["POST /repos/{owner}/{repo}/comments/{comment_id}/reactions",{mediaType:{previews:["squirrel-girl"]}}],createForIssue:["POST /repos/{owner}/{repo}/issues/{issue_number}/reactions",{mediaType:{previews:["squirrel-girl"]}}],createForIssueComment:["POST /repos/{owner}/{repo}/issues/comments/{comment_id}/reactions",{mediaType:{previews:["squirrel-girl"]}}],createForPullRequestReviewComment:["POST /repos/{owner}/{repo}/pulls/comments/{comment_id}/reactions",{mediaType:{previews:["squirrel-girl"]}}],createForTeamDiscussionCommentInOrg:["POST /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}/reactions",{mediaType:{previews:["squirrel-girl"]}}],createForTeamDiscussionInOrg:["POST /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/reactions",{mediaType:{previews:["squirrel-girl"]}}],deleteForCommitComment:["DELETE /repos/{owner}/{repo}/comments/{comment_id}/reactions/{reaction_id}",{mediaType:{previews:["squirrel-girl"]}}],deleteForIssue:["DELETE /repos/{owner}/{repo}/issues/{issue_number}/reactions/{reaction_id}",{mediaType:{previews:["squirrel-girl"]}}],deleteForIssueComment:["DELETE /repos/{owner}/{repo}/issues/comments/{comment_id}/reactions/{reaction_id}",{mediaType:{previews:["squirrel-girl"]}}],deleteForPullRequestComment:["DELETE /repos/{owner}/{repo}/pulls/comments/{comment_id}/reactions/{reaction_id}",{mediaType:{previews:["squirrel-girl"]}}],deleteForTeamDiscussion:["DELETE /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/reactions/{reaction_id}",{mediaType:{previews:["squirrel-girl"]}}],deleteForTeamDiscussionComment:["DELETE /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}/reactions/{reaction_id}",{mediaType:{previews:["squirrel-girl"]}}],deleteLegacy:["DELETE /reactions/{reaction_id}",{mediaType:{previews:["squirrel-girl"]}},{deprecated:"octokit.reactions.deleteLegacy() is deprecated, see https://developer.github.com/v3/reactions/#delete-a-reaction-legacy"}],listForCommitComment:["GET /repos/{owner}/{repo}/comments/{comment_id}/reactions",{mediaType:{previews:["squirrel-girl"]}}],listForIssue:["GET /repos/{owner}/{repo}/issues/{issue_number}/reactions",{mediaType:{previews:["squirrel-girl"]}}],listForIssueComment:["GET /repos/{owner}/{repo}/issues/comments/{comment_id}/reactions",{mediaType:{previews:["squirrel-girl"]}}],listForPullRequestReviewComment:["GET /repos/{owner}/{repo}/pulls/comments/{comment_id}/reactions",{mediaType:{previews:["squirrel-girl"]}}],listForTeamDiscussionCommentInOrg:["GET /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}/reactions",{mediaType:{previews:["squirrel-girl"]}}],listForTeamDiscussionInOrg:["GET /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/reactions",{mediaType:{previews:["squirrel-girl"]}}]},repos:{acceptInvitation:["PATCH /user/repository_invitations/{invitation_id}"],addAppAccessRestrictions:["POST /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/apps",{},{mapToData:"apps"}],addCollaborator:["PUT /repos/{owner}/{repo}/collaborators/{username}"],addStatusCheckContexts:["POST /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks/contexts",{},{mapToData:"contexts"}],addTeamAccessRestrictions:["POST /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/teams",{},{mapToData:"teams"}],addUserAccessRestrictions:["POST /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/users",{},{mapToData:"users"}],checkCollaborator:["GET /repos/{owner}/{repo}/collaborators/{username}"],checkVulnerabilityAlerts:["GET /repos/{owner}/{repo}/vulnerability-alerts",{mediaType:{previews:["dorian"]}}],compareCommits:["GET /repos/{owner}/{repo}/compare/{base}...{head}"],createCommitComment:["POST /repos/{owner}/{repo}/commits/{commit_sha}/comments"],createCommitSignatureProtection:["POST /repos/{owner}/{repo}/branches/{branch}/protection/required_signatures",{mediaType:{previews:["zzzax"]}}],createCommitStatus:["POST /repos/{owner}/{repo}/statuses/{sha}"],createDeployKey:["POST /repos/{owner}/{repo}/keys"],createDeployment:["POST /repos/{owner}/{repo}/deployments"],createDeploymentStatus:["POST /repos/{owner}/{repo}/deployments/{deployment_id}/statuses"],createDispatchEvent:["POST /repos/{owner}/{repo}/dispatches"],createForAuthenticatedUser:["POST /user/repos"],createFork:["POST /repos/{owner}/{repo}/forks"],createInOrg:["POST /orgs/{org}/repos"],createOrUpdateFileContents:["PUT /repos/{owner}/{repo}/contents/{path}"],createPagesSite:["POST /repos/{owner}/{repo}/pages",{mediaType:{previews:["switcheroo"]}}],createRelease:["POST /repos/{owner}/{repo}/releases"],createUsingTemplate:["POST /repos/{template_owner}/{template_repo}/generate",{mediaType:{previews:["baptiste"]}}],createWebhook:["POST /repos/{owner}/{repo}/hooks"],declineInvitation:["DELETE /user/repository_invitations/{invitation_id}"],delete:["DELETE /repos/{owner}/{repo}"],deleteAccessRestrictions:["DELETE /repos/{owner}/{repo}/branches/{branch}/protection/restrictions"],deleteAdminBranchProtection:["DELETE /repos/{owner}/{repo}/branches/{branch}/protection/enforce_admins"],deleteBranchProtection:["DELETE /repos/{owner}/{repo}/branches/{branch}/protection"],deleteCommitComment:["DELETE /repos/{owner}/{repo}/comments/{comment_id}"],deleteCommitSignatureProtection:["DELETE /repos/{owner}/{repo}/branches/{branch}/protection/required_signatures",{mediaType:{previews:["zzzax"]}}],deleteDeployKey:["DELETE /repos/{owner}/{repo}/keys/{key_id}"],deleteDeployment:["DELETE /repos/{owner}/{repo}/deployments/{deployment_id}"],deleteFile:["DELETE /repos/{owner}/{repo}/contents/{path}"],deleteInvitation:["DELETE /repos/{owner}/{repo}/invitations/{invitation_id}"],deletePagesSite:["DELETE /repos/{owner}/{repo}/pages",{mediaType:{previews:["switcheroo"]}}],deletePullRequestReviewProtection:["DELETE /repos/{owner}/{repo}/branches/{branch}/protection/required_pull_request_reviews"],deleteRelease:["DELETE /repos/{owner}/{repo}/releases/{release_id}"],deleteReleaseAsset:["DELETE /repos/{owner}/{repo}/releases/assets/{asset_id}"],deleteWebhook:["DELETE /repos/{owner}/{repo}/hooks/{hook_id}"],disableAutomatedSecurityFixes:["DELETE /repos/{owner}/{repo}/automated-security-fixes",{mediaType:{previews:["london"]}}],disableVulnerabilityAlerts:["DELETE /repos/{owner}/{repo}/vulnerability-alerts",{mediaType:{previews:["dorian"]}}],downloadArchive:["GET /repos/{owner}/{repo}/{archive_format}/{ref}"],enableAutomatedSecurityFixes:["PUT /repos/{owner}/{repo}/automated-security-fixes",{mediaType:{previews:["london"]}}],enableVulnerabilityAlerts:["PUT /repos/{owner}/{repo}/vulnerability-alerts",{mediaType:{previews:["dorian"]}}],get:["GET /repos/{owner}/{repo}"],getAccessRestrictions:["GET /repos/{owner}/{repo}/branches/{branch}/protection/restrictions"],getAdminBranchProtection:["GET /repos/{owner}/{repo}/branches/{branch}/protection/enforce_admins"],getAllStatusCheckContexts:["GET /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks/contexts"],getAllTopics:["GET /repos/{owner}/{repo}/topics",{mediaType:{previews:["mercy"]}}],getAppsWithAccessToProtectedBranch:["GET /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/apps"],getBranch:["GET /repos/{owner}/{repo}/branches/{branch}"],getBranchProtection:["GET /repos/{owner}/{repo}/branches/{branch}/protection"],getClones:["GET /repos/{owner}/{repo}/traffic/clones"],getCodeFrequencyStats:["GET /repos/{owner}/{repo}/stats/code_frequency"],getCollaboratorPermissionLevel:["GET /repos/{owner}/{repo}/collaborators/{username}/permission"],getCombinedStatusForRef:["GET /repos/{owner}/{repo}/commits/{ref}/status"],getCommit:["GET /repos/{owner}/{repo}/commits/{ref}"],getCommitActivityStats:["GET /repos/{owner}/{repo}/stats/commit_activity"],getCommitComment:["GET /repos/{owner}/{repo}/comments/{comment_id}"],getCommitSignatureProtection:["GET /repos/{owner}/{repo}/branches/{branch}/protection/required_signatures",{mediaType:{previews:["zzzax"]}}],getCommunityProfileMetrics:["GET /repos/{owner}/{repo}/community/profile",{mediaType:{previews:["black-panther"]}}],getContent:["GET /repos/{owner}/{repo}/contents/{path}"],getContributorsStats:["GET /repos/{owner}/{repo}/stats/contributors"],getDeployKey:["GET /repos/{owner}/{repo}/keys/{key_id}"],getDeployment:["GET /repos/{owner}/{repo}/deployments/{deployment_id}"],getDeploymentStatus:["GET /repos/{owner}/{repo}/deployments/{deployment_id}/statuses/{status_id}"],getLatestPagesBuild:["GET /repos/{owner}/{repo}/pages/builds/latest"],getLatestRelease:["GET /repos/{owner}/{repo}/releases/latest"],getPages:["GET /repos/{owner}/{repo}/pages"],getPagesBuild:["GET /repos/{owner}/{repo}/pages/builds/{build_id}"],getParticipationStats:["GET /repos/{owner}/{repo}/stats/participation"],getPullRequestReviewProtection:["GET /repos/{owner}/{repo}/branches/{branch}/protection/required_pull_request_reviews"],getPunchCardStats:["GET /repos/{owner}/{repo}/stats/punch_card"],getReadme:["GET /repos/{owner}/{repo}/readme"],getRelease:["GET /repos/{owner}/{repo}/releases/{release_id}"],getReleaseAsset:["GET /repos/{owner}/{repo}/releases/assets/{asset_id}"],getReleaseByTag:["GET /repos/{owner}/{repo}/releases/tags/{tag}"],getStatusChecksProtection:["GET /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks"],getTeamsWithAccessToProtectedBranch:["GET /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/teams"],getTopPaths:["GET /repos/{owner}/{repo}/traffic/popular/paths"],getTopReferrers:["GET /repos/{owner}/{repo}/traffic/popular/referrers"],getUsersWithAccessToProtectedBranch:["GET /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/users"],getViews:["GET /repos/{owner}/{repo}/traffic/views"],getWebhook:["GET /repos/{owner}/{repo}/hooks/{hook_id}"],listBranches:["GET /repos/{owner}/{repo}/branches"],listBranchesForHeadCommit:["GET /repos/{owner}/{repo}/commits/{commit_sha}/branches-where-head",{mediaType:{previews:["groot"]}}],listCollaborators:["GET /repos/{owner}/{repo}/collaborators"],listCommentsForCommit:["GET /repos/{owner}/{repo}/commits/{commit_sha}/comments"],listCommitCommentsForRepo:["GET /repos/{owner}/{repo}/comments"],listCommitStatusesForRef:["GET /repos/{owner}/{repo}/commits/{ref}/statuses"],listCommits:["GET /repos/{owner}/{repo}/commits"],listContributors:["GET /repos/{owner}/{repo}/contributors"],listDeployKeys:["GET /repos/{owner}/{repo}/keys"],listDeploymentStatuses:["GET /repos/{owner}/{repo}/deployments/{deployment_id}/statuses"],listDeployments:["GET /repos/{owner}/{repo}/deployments"],listForAuthenticatedUser:["GET /user/repos"],listForOrg:["GET /orgs/{org}/repos"],listForUser:["GET /users/{username}/repos"],listForks:["GET /repos/{owner}/{repo}/forks"],listInvitations:["GET /repos/{owner}/{repo}/invitations"],listInvitationsForAuthenticatedUser:["GET /user/repository_invitations"],listLanguages:["GET /repos/{owner}/{repo}/languages"],listPagesBuilds:["GET /repos/{owner}/{repo}/pages/builds"],listPublic:["GET /repositories"],listPullRequestsAssociatedWithCommit:["GET /repos/{owner}/{repo}/commits/{commit_sha}/pulls",{mediaType:{previews:["groot"]}}],listReleaseAssets:["GET /repos/{owner}/{repo}/releases/{release_id}/assets"],listReleases:["GET /repos/{owner}/{repo}/releases"],listTags:["GET /repos/{owner}/{repo}/tags"],listTeams:["GET /repos/{owner}/{repo}/teams"],listWebhooks:["GET /repos/{owner}/{repo}/hooks"],merge:["POST /repos/{owner}/{repo}/merges"],pingWebhook:["POST /repos/{owner}/{repo}/hooks/{hook_id}/pings"],removeAppAccessRestrictions:["DELETE /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/apps",{},{mapToData:"apps"}],removeCollaborator:["DELETE /repos/{owner}/{repo}/collaborators/{username}"],removeStatusCheckContexts:["DELETE /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks/contexts",{},{mapToData:"contexts"}],removeStatusCheckProtection:["DELETE /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks"],removeTeamAccessRestrictions:["DELETE /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/teams",{},{mapToData:"teams"}],removeUserAccessRestrictions:["DELETE /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/users",{},{mapToData:"users"}],replaceAllTopics:["PUT /repos/{owner}/{repo}/topics",{mediaType:{previews:["mercy"]}}],requestPagesBuild:["POST /repos/{owner}/{repo}/pages/builds"],setAdminBranchProtection:["POST /repos/{owner}/{repo}/branches/{branch}/protection/enforce_admins"],setAppAccessRestrictions:["PUT /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/apps",{},{mapToData:"apps"}],setStatusCheckContexts:["PUT /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks/contexts",{},{mapToData:"contexts"}],setTeamAccessRestrictions:["PUT /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/teams",{},{mapToData:"teams"}],setUserAccessRestrictions:["PUT /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/users",{},{mapToData:"users"}],testPushWebhook:["POST /repos/{owner}/{repo}/hooks/{hook_id}/tests"],transfer:["POST /repos/{owner}/{repo}/transfer"],update:["PATCH /repos/{owner}/{repo}"],updateBranchProtection:["PUT /repos/{owner}/{repo}/branches/{branch}/protection"],updateCommitComment:["PATCH /repos/{owner}/{repo}/comments/{comment_id}"],updateInformationAboutPagesSite:["PUT /repos/{owner}/{repo}/pages"],updateInvitation:["PATCH /repos/{owner}/{repo}/invitations/{invitation_id}"],updatePullRequestReviewProtection:["PATCH /repos/{owner}/{repo}/branches/{branch}/protection/required_pull_request_reviews"],updateRelease:["PATCH /repos/{owner}/{repo}/releases/{release_id}"],updateReleaseAsset:["PATCH /repos/{owner}/{repo}/releases/assets/{asset_id}"],updateStatusCheckPotection:["PATCH /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks"],updateWebhook:["PATCH /repos/{owner}/{repo}/hooks/{hook_id}"],uploadReleaseAsset:["POST /repos/{owner}/{repo}/releases/{release_id}/assets{?name,label}",{baseUrl:"https://uploads.github.com"}]},search:{code:["GET /search/code"],commits:["GET /search/commits",{mediaType:{previews:["cloak"]}}],issuesAndPullRequests:["GET /search/issues"],labels:["GET /search/labels"],repos:["GET /search/repositories"],topics:["GET /search/topics",{mediaType:{previews:["mercy"]}}],users:["GET /search/users"]},teams:{addOrUpdateMembershipForUserInOrg:["PUT /orgs/{org}/teams/{team_slug}/memberships/{username}"],addOrUpdateProjectPermissionsInOrg:["PUT /orgs/{org}/teams/{team_slug}/projects/{project_id}",{mediaType:{previews:["inertia"]}}],addOrUpdateRepoPermissionsInOrg:["PUT /orgs/{org}/teams/{team_slug}/repos/{owner}/{repo}"],checkPermissionsForProjectInOrg:["GET /orgs/{org}/teams/{team_slug}/projects/{project_id}",{mediaType:{previews:["inertia"]}}],checkPermissionsForRepoInOrg:["GET /orgs/{org}/teams/{team_slug}/repos/{owner}/{repo}"],create:["POST /orgs/{org}/teams"],createDiscussionCommentInOrg:["POST /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments"],createDiscussionInOrg:["POST /orgs/{org}/teams/{team_slug}/discussions"],deleteDiscussionCommentInOrg:["DELETE /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}"],deleteDiscussionInOrg:["DELETE /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}"],deleteInOrg:["DELETE /orgs/{org}/teams/{team_slug}"],getByName:["GET /orgs/{org}/teams/{team_slug}"],getDiscussionCommentInOrg:["GET /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}"],getDiscussionInOrg:["GET /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}"],getMembershipForUserInOrg:["GET /orgs/{org}/teams/{team_slug}/memberships/{username}"],list:["GET /orgs/{org}/teams"],listChildInOrg:["GET /orgs/{org}/teams/{team_slug}/teams"],listDiscussionCommentsInOrg:["GET /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments"],listDiscussionsInOrg:["GET /orgs/{org}/teams/{team_slug}/discussions"],listForAuthenticatedUser:["GET /user/teams"],listMembersInOrg:["GET /orgs/{org}/teams/{team_slug}/members"],listPendingInvitationsInOrg:["GET /orgs/{org}/teams/{team_slug}/invitations"],listProjectsInOrg:["GET /orgs/{org}/teams/{team_slug}/projects",{mediaType:{previews:["inertia"]}}],listReposInOrg:["GET /orgs/{org}/teams/{team_slug}/repos"],removeMembershipForUserInOrg:["DELETE /orgs/{org}/teams/{team_slug}/memberships/{username}"],removeProjectInOrg:["DELETE /orgs/{org}/teams/{team_slug}/projects/{project_id}"],removeRepoInOrg:["DELETE /orgs/{org}/teams/{team_slug}/repos/{owner}/{repo}"],updateDiscussionCommentInOrg:["PATCH /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}"],updateDiscussionInOrg:["PATCH /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}"],updateInOrg:["PATCH /orgs/{org}/teams/{team_slug}"]},users:{addEmailForAuthenticated:["POST /user/emails"],block:["PUT /user/blocks/{username}"],checkBlocked:["GET /user/blocks/{username}"],checkFollowingForUser:["GET /users/{username}/following/{target_user}"],checkPersonIsFollowedByAuthenticated:["GET /user/following/{username}"],createGpgKeyForAuthenticated:["POST /user/gpg_keys"],createPublicSshKeyForAuthenticated:["POST /user/keys"],deleteEmailForAuthenticated:["DELETE /user/emails"],deleteGpgKeyForAuthenticated:["DELETE /user/gpg_keys/{gpg_key_id}"],deletePublicSshKeyForAuthenticated:["DELETE /user/keys/{key_id}"],follow:["PUT /user/following/{username}"],getAuthenticated:["GET /user"],getByUsername:["GET /users/{username}"],getContextForUser:["GET /users/{username}/hovercard"],getGpgKeyForAuthenticated:["GET /user/gpg_keys/{gpg_key_id}"],getPublicSshKeyForAuthenticated:["GET /user/keys/{key_id}"],list:["GET /users"],listBlockedByAuthenticated:["GET /user/blocks"],listEmailsForAuthenticated:["GET /user/emails"],listFollowedByAuthenticated:["GET /user/following"],listFollowersForAuthenticatedUser:["GET /user/followers"],listFollowersForUser:["GET /users/{username}/followers"],listFollowingForUser:["GET /users/{username}/following"],listGpgKeysForAuthenticated:["GET /user/gpg_keys"],listGpgKeysForUser:["GET /users/{username}/gpg_keys"],listPublicEmailsForAuthenticated:["GET /user/public_emails"],listPublicKeysForUser:["GET /users/{username}/keys"],listPublicSshKeysForAuthenticated:["GET /user/keys"],setPrimaryEmailVisibilityForAuthenticated:["PATCH /user/email/visibility"],unblock:["DELETE /user/blocks/{username}"],unfollow:["DELETE /user/following/{username}"],updateAuthenticated:["PATCH /user"]}},VERSION$4="4.2.0";function endpointsToMethods(e,t){const r={};for(const[s,o]of Object.entries(t))for(const[i,n]of Object.entries(o)){const[a,u,d]=n,[l,f]=a.split(/ /),g=Object.assign({method:l,url:f},u);r[s]||(r[s]={});const y=r[s];if(d){y[i]=decorate(e,s,i,g,d);continue}y[i]=e.request.defaults(g)}return r}function decorate(e,t,r,s,o){const i=e.request.defaults(s);function n(...a){let u=i.endpoint.merge(...a);if(o.mapToData)return u=Object.assign({},u,{data:u[o.mapToData],[o.mapToData]:void 0}),i(u);if(o.renamed){const[d,l]=o.renamed;e.log.warn(`octokit.${t}.${r}() has been renamed to octokit.${d}.${l}()`)}if(o.deprecated&&e.log.warn(o.deprecated),o.renamedParameters){const d=i.endpoint.merge(...a);for(const[l,f]of Object.entries(o.renamedParameters))l in d&&(e.log.warn(`"${l}" parameter is deprecated for "octokit.${t}.${r}()". Use "${f}" instead`),f in d||(d[f]=d[l]),delete d[l]);return i(d)}return i(...a)}return Object.assign(n,i)}function restEndpointMethods(e){return endpointsToMethods(e,Endpoints)}restEndpointMethods.VERSION=VERSION$4;var distWeb$1=Object.freeze({__proto__:null,restEndpointMethods});const VERSION$5="2.4.0";function normalizePaginatedListResponse(e){const t="total_count"in e.data&&!("url"in e.data);if(!t)return e;const r=e.data.incomplete_results,s=e.data.repository_selection,o=e.data.total_count;delete e.data.incomplete_results,delete e.data.repository_selection,delete e.data.total_count;const i=Object.keys(e.data)[0],n=e.data[i];return e.data=n,typeof r!="undefined"&&(e.data.incomplete_results=r),typeof s!="undefined"&&(e.data.repository_selection=s),e.data.total_count=o,e}function iterator(e,t,r){const s=typeof t=="function"?t.endpoint(r):e.request.endpoint(t,r),o=typeof t=="function"?t:e.request,i=s.method,n=s.headers;let a=s.url;return{[Symbol.asyncIterator]:()=>({next(){return a?o({method:i,url:a,headers:n}).then(normalizePaginatedListResponse).then(u=>(a=((u.headers.link||"").match(/<([^>]+)>;\s*rel="next"/)||[])[1],{value:u})):Promise.resolve({done:!0})}})}}function paginate(e,t,r,s){return typeof r=="function"&&(s=r,r=void 0),gather(e,[],iterator(e,t,r)[Symbol.asyncIterator](),s)}function gather(e,t,r,s){return r.next().then(o=>{if(o.done)return t;let i=!1;function n(){i=!0}return t=t.concat(s?s(o.value,n):o.value.data),i?t:gather(e,t,r,s)})}function paginateRest(e){return{paginate:Object.assign(paginate.bind(null,e),{iterator:iterator.bind(null,e)})}}paginateRest.VERSION=VERSION$5;var distWeb$2=Object.freeze({__proto__:null,paginateRest}),core_1=getAugmentedNamespace(distWeb),plugin_rest_endpoint_methods_1=getAugmentedNamespace(distWeb$1),plugin_paginate_rest_1=getAugmentedNamespace(distWeb$2),utils$2=createCommonjsModule(function(e,t){var r=commonjsGlobal&&commonjsGlobal.__createBinding||(Object.create?function(l,f,g,y){y===void 0&&(y=g),Object.defineProperty(l,y,{enumerable:!0,get:function(){return f[g]}})}:function(l,f,g,y){y===void 0&&(y=g),l[y]=f[g]}),s=commonjsGlobal&&commonjsGlobal.__setModuleDefault||(Object.create?function(l,f){Object.defineProperty(l,"default",{enumerable:!0,value:f})}:function(l,f){l.default=f}),o=commonjsGlobal&&commonjsGlobal.__importStar||function(l){if(l&&l.__esModule)return l;var f={};if(l!=null)for(var g in l)Object.hasOwnProperty.call(l,g)&&r(f,l,g);return s(f,l),f};Object.defineProperty(t,"__esModule",{value:!0}),t.getOctokitOptions=t.GitHub=t.context=void 0;const i=o(context),n=o(utils$1);t.context=new i.Context;const a=n.getApiBaseUrl(),u={baseUrl:a,request:{agent:n.getProxyAgent(a)}};t.GitHub=core_1.Octokit.plugin(plugin_rest_endpoint_methods_1.restEndpointMethods,plugin_paginate_rest_1.paginateRest).defaults(u);function d(l,f){const g=Object.assign({},f||{}),y=n.getAuthString(l,g);return y&&(g.auth=y),g}t.getOctokitOptions=d}),github=createCommonjsModule(function(e,t){var r=commonjsGlobal&&commonjsGlobal.__createBinding||(Object.create?function(a,u,d,l){l===void 0&&(l=d),Object.defineProperty(a,l,{enumerable:!0,get:function(){return u[d]}})}:function(a,u,d,l){l===void 0&&(l=d),a[l]=u[d]}),s=commonjsGlobal&&commonjsGlobal.__setModuleDefault||(Object.create?function(a,u){Object.defineProperty(a,"default",{enumerable:!0,value:u})}:function(a,u){a.default=u}),o=commonjsGlobal&&commonjsGlobal.__importStar||function(a){if(a&&a.__esModule)return a;var u={};if(a!=null)for(var d in a)Object.hasOwnProperty.call(a,d)&&r(u,a,d);return s(u,a),u};Object.defineProperty(t,"__esModule",{value:!0}),t.getOctokit=t.context=void 0;const i=o(context);t.context=new i.Context;function n(a,u){return new utils$2.GitHub(utils$2.getOctokitOptions(a,u))}t.getOctokit=n});const getEnv=e=>{const t=process.env[e];if(!t)throw new Error(`Environment variable not set: ${e}`);return t},env=new Proxy(getEnv,{get(e,t){return t in e?t:getEnv(t)}});async function run(){var e;const t=github.getOctokit(core.getInput("github_token",{required:!0})),[r,s]=((e=core.getInput("repository",{required:!1}))!=null?e:env.GITHUB_REPOSITORY).split("/",2);let o;if(core.getInput("run_id")){const u=await t.actions.getWorkflowRun({owner:r,repo:s,run_id:core.getInput("run_id")});o=u.data.workflow_id}else o=core.getInput("workflow_id",{required:!0});const i=await t.actions.listWorkflowRuns({owner:r,repo:s,workflow_id:o,status:"success",branch:getBranch()}),n=i.data.workflow_runs.map(u=>u.head_commit).sort((u,d)=>{const l=new Date(u.timestamp),f=new Date(d.timestamp);return l<f?-1:l>f?1:0});let a;n.length>0?a={has_commit:!0,workflow_id:o,commit_author_name:n[n.length-1].author.name,commit_author_email:n[n.length-1].author.email,commit_committer_name:n[n.length-1].committer.name,commit_committer_email:n[n.length-1].committer.email,commit_message:n[n.length-1].message,commit_timestamp:n[n.length-1].timestamp,commit_tree_id:n[n.length-1].tree_id,commit_sha:n[n.length-1].id,commit_sha_short:n[n.length-1].id.slice(0,7)}:a={has_commit:!1,workflow_id:o},console.log("Available outputs:");for(const u in a)console.log(`    ${u}: ${a[u]}`)}function getBranch(){const e=core.getInput("branch"),t="refs/heads/";return e.startsWith(t)?e.slice(t.length):e}run().catch(console.error),exports.run=run;
